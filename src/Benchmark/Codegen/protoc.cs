// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: my.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, CS8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace protoc
{

    /// <summary>Holder for reflection information generated from my.proto</summary>
    public static partial class MyReflection
    {

        #region Descriptor
        /// <summary>File descriptor for my.proto</summary>
        public static pbr::FileDescriptor Descriptor
        {
            get { return descriptor; }
        }
        private static pbr::FileDescriptor descriptor;

        static MyReflection()
        {
            byte[] descriptorData = global::System.Convert.FromBase64String(
                string.Concat(
                  "CghteS5wcm90bxIDREFMGh9nb29nbGUvcHJvdG9idWYvVGltZXN0YW1wLnBy",
                  "b3RvIiYKCERhdGFiYXNlEhoKBk9yZGVycxgBIAMoCzIKLkRBTC5PcmRlciKN",
                  "AwoFT3JkZXISDwoHT3JkZXJJRBgBIAEoBRISCgpDdXN0b21lcklEGAIgASgJ",
                  "EhIKCkVtcGxveWVlSUQYAyABKAUSLQoJT3JkZXJEYXRlGAQgASgLMhouZ29v",
                  "Z2xlLnByb3RvYnVmLlRpbWVzdGFtcBIwCgxSZXF1aXJlZERhdGUYBSABKAsy",
                  "Gi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEi8KC1NoaXBwZWREYXRlGAYg",
                  "ASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIPCgdTaGlwVmlhGAcg",
                  "ASgFEg8KB0ZyZWlnaHQYCCABKAESEAoIU2hpcE5hbWUYCSABKAkSEwoLU2hp",
                  "cEFkZHJlc3MYCiABKAkSEAoIU2hpcENpdHkYCyABKAkSEgoKU2hpcFJlZ2lv",
                  "bhgMIAEoCRIWCg5TaGlwUG9zdGFsQ29kZRgNIAEoCRITCgtTaGlwQ291bnRy",
                  "eRgOIAEoCRIdCgVMaW5lcxgPIAMoCzIOLkRBTC5PcmRlckxpbmUiZgoJT3Jk",
                  "ZXJMaW5lEg8KB09yZGVySUQYASABKAUSEQoJUHJvZHVjdElEGAIgASgFEhEK",
                  "CVVuaXRQcmljZRgDIAEoARIQCghRdWFudGl0eRgEIAEoERIQCghEaXNjb3Vu",
                  "dBgFIAEoAkIJqgIGcHJvdG9jYgZwcm90bzM="));
            descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
                new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
                new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::protoc.Database), global::protoc.Database.Parser, new[]{ "Orders" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::protoc.Order), global::protoc.Order.Parser, new[]{ "OrderID", "CustomerID", "EmployeeID", "OrderDate", "RequiredDate", "ShippedDate", "ShipVia", "Freight", "ShipName", "ShipAddress", "ShipCity", "ShipRegion", "ShipPostalCode", "ShipCountry", "Lines" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::protoc.OrderLine), global::protoc.OrderLine.Parser, new[]{ "OrderID", "ProductID", "UnitPrice", "Quantity", "Discount" }, null, null, null)
                }));
        }
        #endregion

    }
    #region Messages
    public sealed partial class Database : pb::IMessage<Database>
    {
        private static readonly pb::MessageParser<Database> _parser = new pb::MessageParser<Database>(() => new Database());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Database> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::protoc.MyReflection.Descriptor.MessageTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Database()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Database(Database other) : this()
        {
            orders_ = other.orders_.Clone();
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Database Clone()
        {
            return new Database(this);
        }

        /// <summary>Field number for the "Orders" field.</summary>
        public const int OrdersFieldNumber = 1;
        private static readonly pb::FieldCodec<global::protoc.Order> _repeated_orders_codec
            = pb::FieldCodec.ForMessage(10, global::protoc.Order.Parser);
        private readonly pbc::RepeatedField<global::protoc.Order> orders_ = new pbc::RepeatedField<global::protoc.Order>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::protoc.Order> Orders
        {
            get { return orders_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as Database);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Database other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!orders_.Equals(other.orders_)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            hash ^= orders_.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            orders_.WriteTo(output, _repeated_orders_codec);
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            size += orders_.CalculateSize(_repeated_orders_codec);
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Database other)
        {
            if (other == null)
            {
                return;
            }
            orders_.Add(other.orders_);
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 10:
                        {
                            orders_.AddEntriesFrom(input, _repeated_orders_codec);
                            break;
                        }
                }
            }
        }

    }

    public sealed partial class Order : pb::IMessage<Order>
    {
        private static readonly pb::MessageParser<Order> _parser = new pb::MessageParser<Order>(() => new Order());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Order> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::protoc.MyReflection.Descriptor.MessageTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Order()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Order(Order other) : this()
        {
            orderID_ = other.orderID_;
            customerID_ = other.customerID_;
            employeeID_ = other.employeeID_;
            orderDate_ = other.orderDate_ != null ? other.orderDate_.Clone() : null;
            requiredDate_ = other.requiredDate_ != null ? other.requiredDate_.Clone() : null;
            shippedDate_ = other.shippedDate_ != null ? other.shippedDate_.Clone() : null;
            shipVia_ = other.shipVia_;
            freight_ = other.freight_;
            shipName_ = other.shipName_;
            shipAddress_ = other.shipAddress_;
            shipCity_ = other.shipCity_;
            shipRegion_ = other.shipRegion_;
            shipPostalCode_ = other.shipPostalCode_;
            shipCountry_ = other.shipCountry_;
            lines_ = other.lines_.Clone();
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Order Clone()
        {
            return new Order(this);
        }

        /// <summary>Field number for the "OrderID" field.</summary>
        public const int OrderIDFieldNumber = 1;
        private int orderID_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int OrderID
        {
            get { return orderID_; }
            set
            {
                orderID_ = value;
            }
        }

        /// <summary>Field number for the "CustomerID" field.</summary>
        public const int CustomerIDFieldNumber = 2;
        private string customerID_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string CustomerID
        {
            get { return customerID_; }
            set
            {
                customerID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "EmployeeID" field.</summary>
        public const int EmployeeIDFieldNumber = 3;
        private int employeeID_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int EmployeeID
        {
            get { return employeeID_; }
            set
            {
                employeeID_ = value;
            }
        }

        /// <summary>Field number for the "OrderDate" field.</summary>
        public const int OrderDateFieldNumber = 4;
        private global::Google.Protobuf.WellKnownTypes.Timestamp orderDate_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Protobuf.WellKnownTypes.Timestamp OrderDate
        {
            get { return orderDate_; }
            set
            {
                orderDate_ = value;
            }
        }

        /// <summary>Field number for the "RequiredDate" field.</summary>
        public const int RequiredDateFieldNumber = 5;
        private global::Google.Protobuf.WellKnownTypes.Timestamp requiredDate_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Protobuf.WellKnownTypes.Timestamp RequiredDate
        {
            get { return requiredDate_; }
            set
            {
                requiredDate_ = value;
            }
        }

        /// <summary>Field number for the "ShippedDate" field.</summary>
        public const int ShippedDateFieldNumber = 6;
        private global::Google.Protobuf.WellKnownTypes.Timestamp shippedDate_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Protobuf.WellKnownTypes.Timestamp ShippedDate
        {
            get { return shippedDate_; }
            set
            {
                shippedDate_ = value;
            }
        }

        /// <summary>Field number for the "ShipVia" field.</summary>
        public const int ShipViaFieldNumber = 7;
        private int shipVia_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int ShipVia
        {
            get { return shipVia_; }
            set
            {
                shipVia_ = value;
            }
        }

        /// <summary>Field number for the "Freight" field.</summary>
        public const int FreightFieldNumber = 8;
        private double freight_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double Freight
        {
            get { return freight_; }
            set
            {
                freight_ = value;
            }
        }

        /// <summary>Field number for the "ShipName" field.</summary>
        public const int ShipNameFieldNumber = 9;
        private string shipName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ShipName
        {
            get { return shipName_; }
            set
            {
                shipName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "ShipAddress" field.</summary>
        public const int ShipAddressFieldNumber = 10;
        private string shipAddress_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ShipAddress
        {
            get { return shipAddress_; }
            set
            {
                shipAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "ShipCity" field.</summary>
        public const int ShipCityFieldNumber = 11;
        private string shipCity_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ShipCity
        {
            get { return shipCity_; }
            set
            {
                shipCity_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "ShipRegion" field.</summary>
        public const int ShipRegionFieldNumber = 12;
        private string shipRegion_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ShipRegion
        {
            get { return shipRegion_; }
            set
            {
                shipRegion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "ShipPostalCode" field.</summary>
        public const int ShipPostalCodeFieldNumber = 13;
        private string shipPostalCode_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ShipPostalCode
        {
            get { return shipPostalCode_; }
            set
            {
                shipPostalCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "ShipCountry" field.</summary>
        public const int ShipCountryFieldNumber = 14;
        private string shipCountry_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ShipCountry
        {
            get { return shipCountry_; }
            set
            {
                shipCountry_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "Lines" field.</summary>
        public const int LinesFieldNumber = 15;
        private static readonly pb::FieldCodec<global::protoc.OrderLine> _repeated_lines_codec
            = pb::FieldCodec.ForMessage(122, global::protoc.OrderLine.Parser);
        private readonly pbc::RepeatedField<global::protoc.OrderLine> lines_ = new pbc::RepeatedField<global::protoc.OrderLine>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::protoc.OrderLine> Lines
        {
            get { return lines_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as Order);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Order other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (OrderID != other.OrderID) return false;
            if (CustomerID != other.CustomerID) return false;
            if (EmployeeID != other.EmployeeID) return false;
            if (!object.Equals(OrderDate, other.OrderDate)) return false;
            if (!object.Equals(RequiredDate, other.RequiredDate)) return false;
            if (!object.Equals(ShippedDate, other.ShippedDate)) return false;
            if (ShipVia != other.ShipVia) return false;
            if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Freight, other.Freight)) return false;
            if (ShipName != other.ShipName) return false;
            if (ShipAddress != other.ShipAddress) return false;
            if (ShipCity != other.ShipCity) return false;
            if (ShipRegion != other.ShipRegion) return false;
            if (ShipPostalCode != other.ShipPostalCode) return false;
            if (ShipCountry != other.ShipCountry) return false;
            if (!lines_.Equals(other.lines_)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (OrderID != 0) hash ^= OrderID.GetHashCode();
            if (CustomerID.Length != 0) hash ^= CustomerID.GetHashCode();
            if (EmployeeID != 0) hash ^= EmployeeID.GetHashCode();
            if (orderDate_ != null) hash ^= OrderDate.GetHashCode();
            if (requiredDate_ != null) hash ^= RequiredDate.GetHashCode();
            if (shippedDate_ != null) hash ^= ShippedDate.GetHashCode();
            if (ShipVia != 0) hash ^= ShipVia.GetHashCode();
            if (Freight != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Freight);
            if (ShipName.Length != 0) hash ^= ShipName.GetHashCode();
            if (ShipAddress.Length != 0) hash ^= ShipAddress.GetHashCode();
            if (ShipCity.Length != 0) hash ^= ShipCity.GetHashCode();
            if (ShipRegion.Length != 0) hash ^= ShipRegion.GetHashCode();
            if (ShipPostalCode.Length != 0) hash ^= ShipPostalCode.GetHashCode();
            if (ShipCountry.Length != 0) hash ^= ShipCountry.GetHashCode();
            hash ^= lines_.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (OrderID != 0)
            {
                output.WriteRawTag(8);
                output.WriteInt32(OrderID);
            }
            if (CustomerID.Length != 0)
            {
                output.WriteRawTag(18);
                output.WriteString(CustomerID);
            }
            if (EmployeeID != 0)
            {
                output.WriteRawTag(24);
                output.WriteInt32(EmployeeID);
            }
            if (orderDate_ != null)
            {
                output.WriteRawTag(34);
                output.WriteMessage(OrderDate);
            }
            if (requiredDate_ != null)
            {
                output.WriteRawTag(42);
                output.WriteMessage(RequiredDate);
            }
            if (shippedDate_ != null)
            {
                output.WriteRawTag(50);
                output.WriteMessage(ShippedDate);
            }
            if (ShipVia != 0)
            {
                output.WriteRawTag(56);
                output.WriteInt32(ShipVia);
            }
            if (Freight != 0D)
            {
                output.WriteRawTag(65);
                output.WriteDouble(Freight);
            }
            if (ShipName.Length != 0)
            {
                output.WriteRawTag(74);
                output.WriteString(ShipName);
            }
            if (ShipAddress.Length != 0)
            {
                output.WriteRawTag(82);
                output.WriteString(ShipAddress);
            }
            if (ShipCity.Length != 0)
            {
                output.WriteRawTag(90);
                output.WriteString(ShipCity);
            }
            if (ShipRegion.Length != 0)
            {
                output.WriteRawTag(98);
                output.WriteString(ShipRegion);
            }
            if (ShipPostalCode.Length != 0)
            {
                output.WriteRawTag(106);
                output.WriteString(ShipPostalCode);
            }
            if (ShipCountry.Length != 0)
            {
                output.WriteRawTag(114);
                output.WriteString(ShipCountry);
            }
            lines_.WriteTo(output, _repeated_lines_codec);
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (OrderID != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(OrderID);
            }
            if (CustomerID.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(CustomerID);
            }
            if (EmployeeID != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(EmployeeID);
            }
            if (orderDate_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(OrderDate);
            }
            if (requiredDate_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequiredDate);
            }
            if (shippedDate_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(ShippedDate);
            }
            if (ShipVia != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(ShipVia);
            }
            if (Freight != 0D)
            {
                size += 1 + 8;
            }
            if (ShipName.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(ShipName);
            }
            if (ShipAddress.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(ShipAddress);
            }
            if (ShipCity.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(ShipCity);
            }
            if (ShipRegion.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(ShipRegion);
            }
            if (ShipPostalCode.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(ShipPostalCode);
            }
            if (ShipCountry.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(ShipCountry);
            }
            size += lines_.CalculateSize(_repeated_lines_codec);
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Order other)
        {
            if (other == null)
            {
                return;
            }
            if (other.OrderID != 0)
            {
                OrderID = other.OrderID;
            }
            if (other.CustomerID.Length != 0)
            {
                CustomerID = other.CustomerID;
            }
            if (other.EmployeeID != 0)
            {
                EmployeeID = other.EmployeeID;
            }
            if (other.orderDate_ != null)
            {
                if (orderDate_ == null)
                {
                    orderDate_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                OrderDate.MergeFrom(other.OrderDate);
            }
            if (other.requiredDate_ != null)
            {
                if (requiredDate_ == null)
                {
                    requiredDate_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                RequiredDate.MergeFrom(other.RequiredDate);
            }
            if (other.shippedDate_ != null)
            {
                if (shippedDate_ == null)
                {
                    shippedDate_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                ShippedDate.MergeFrom(other.ShippedDate);
            }
            if (other.ShipVia != 0)
            {
                ShipVia = other.ShipVia;
            }
            if (other.Freight != 0D)
            {
                Freight = other.Freight;
            }
            if (other.ShipName.Length != 0)
            {
                ShipName = other.ShipName;
            }
            if (other.ShipAddress.Length != 0)
            {
                ShipAddress = other.ShipAddress;
            }
            if (other.ShipCity.Length != 0)
            {
                ShipCity = other.ShipCity;
            }
            if (other.ShipRegion.Length != 0)
            {
                ShipRegion = other.ShipRegion;
            }
            if (other.ShipPostalCode.Length != 0)
            {
                ShipPostalCode = other.ShipPostalCode;
            }
            if (other.ShipCountry.Length != 0)
            {
                ShipCountry = other.ShipCountry;
            }
            lines_.Add(other.lines_);
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 8:
                        {
                            OrderID = input.ReadInt32();
                            break;
                        }
                    case 18:
                        {
                            CustomerID = input.ReadString();
                            break;
                        }
                    case 24:
                        {
                            EmployeeID = input.ReadInt32();
                            break;
                        }
                    case 34:
                        {
                            if (orderDate_ == null)
                            {
                                orderDate_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                            }
                            input.ReadMessage(orderDate_);
                            break;
                        }
                    case 42:
                        {
                            if (requiredDate_ == null)
                            {
                                requiredDate_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                            }
                            input.ReadMessage(requiredDate_);
                            break;
                        }
                    case 50:
                        {
                            if (shippedDate_ == null)
                            {
                                shippedDate_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                            }
                            input.ReadMessage(shippedDate_);
                            break;
                        }
                    case 56:
                        {
                            ShipVia = input.ReadInt32();
                            break;
                        }
                    case 65:
                        {
                            Freight = input.ReadDouble();
                            break;
                        }
                    case 74:
                        {
                            ShipName = input.ReadString();
                            break;
                        }
                    case 82:
                        {
                            ShipAddress = input.ReadString();
                            break;
                        }
                    case 90:
                        {
                            ShipCity = input.ReadString();
                            break;
                        }
                    case 98:
                        {
                            ShipRegion = input.ReadString();
                            break;
                        }
                    case 106:
                        {
                            ShipPostalCode = input.ReadString();
                            break;
                        }
                    case 114:
                        {
                            ShipCountry = input.ReadString();
                            break;
                        }
                    case 122:
                        {
                            lines_.AddEntriesFrom(input, _repeated_lines_codec);
                            break;
                        }
                }
            }
        }

    }

    public sealed partial class OrderLine : pb::IMessage<OrderLine>
    {
        private static readonly pb::MessageParser<OrderLine> _parser = new pb::MessageParser<OrderLine>(() => new OrderLine());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<OrderLine> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::protoc.MyReflection.Descriptor.MessageTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public OrderLine()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public OrderLine(OrderLine other) : this()
        {
            orderID_ = other.orderID_;
            productID_ = other.productID_;
            unitPrice_ = other.unitPrice_;
            quantity_ = other.quantity_;
            discount_ = other.discount_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public OrderLine Clone()
        {
            return new OrderLine(this);
        }

        /// <summary>Field number for the "OrderID" field.</summary>
        public const int OrderIDFieldNumber = 1;
        private int orderID_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int OrderID
        {
            get { return orderID_; }
            set
            {
                orderID_ = value;
            }
        }

        /// <summary>Field number for the "ProductID" field.</summary>
        public const int ProductIDFieldNumber = 2;
        private int productID_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int ProductID
        {
            get { return productID_; }
            set
            {
                productID_ = value;
            }
        }

        /// <summary>Field number for the "UnitPrice" field.</summary>
        public const int UnitPriceFieldNumber = 3;
        private double unitPrice_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double UnitPrice
        {
            get { return unitPrice_; }
            set
            {
                unitPrice_ = value;
            }
        }

        /// <summary>Field number for the "Quantity" field.</summary>
        public const int QuantityFieldNumber = 4;
        private int quantity_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Quantity
        {
            get { return quantity_; }
            set
            {
                quantity_ = value;
            }
        }

        /// <summary>Field number for the "Discount" field.</summary>
        public const int DiscountFieldNumber = 5;
        private float discount_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float Discount
        {
            get { return discount_; }
            set
            {
                discount_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as OrderLine);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(OrderLine other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (OrderID != other.OrderID) return false;
            if (ProductID != other.ProductID) return false;
            if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(UnitPrice, other.UnitPrice)) return false;
            if (Quantity != other.Quantity) return false;
            if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Discount, other.Discount)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (OrderID != 0) hash ^= OrderID.GetHashCode();
            if (ProductID != 0) hash ^= ProductID.GetHashCode();
            if (UnitPrice != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(UnitPrice);
            if (Quantity != 0) hash ^= Quantity.GetHashCode();
            if (Discount != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Discount);
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (OrderID != 0)
            {
                output.WriteRawTag(8);
                output.WriteInt32(OrderID);
            }
            if (ProductID != 0)
            {
                output.WriteRawTag(16);
                output.WriteInt32(ProductID);
            }
            if (UnitPrice != 0D)
            {
                output.WriteRawTag(25);
                output.WriteDouble(UnitPrice);
            }
            if (Quantity != 0)
            {
                output.WriteRawTag(32);
                output.WriteSInt32(Quantity);
            }
            if (Discount != 0F)
            {
                output.WriteRawTag(45);
                output.WriteFloat(Discount);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (OrderID != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(OrderID);
            }
            if (ProductID != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(ProductID);
            }
            if (UnitPrice != 0D)
            {
                size += 1 + 8;
            }
            if (Quantity != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Quantity);
            }
            if (Discount != 0F)
            {
                size += 1 + 4;
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(OrderLine other)
        {
            if (other == null)
            {
                return;
            }
            if (other.OrderID != 0)
            {
                OrderID = other.OrderID;
            }
            if (other.ProductID != 0)
            {
                ProductID = other.ProductID;
            }
            if (other.UnitPrice != 0D)
            {
                UnitPrice = other.UnitPrice;
            }
            if (other.Quantity != 0)
            {
                Quantity = other.Quantity;
            }
            if (other.Discount != 0F)
            {
                Discount = other.Discount;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 8:
                        {
                            OrderID = input.ReadInt32();
                            break;
                        }
                    case 16:
                        {
                            ProductID = input.ReadInt32();
                            break;
                        }
                    case 25:
                        {
                            UnitPrice = input.ReadDouble();
                            break;
                        }
                    case 32:
                        {
                            Quantity = input.ReadSInt32();
                            break;
                        }
                    case 45:
                        {
                            Discount = input.ReadFloat();
                            break;
                        }
                }
            }
        }

    }

    #endregion

}

#endregion Designer generated code

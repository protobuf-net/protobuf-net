// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: test_proxy.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Benchmark.Nano.HandWrittenNoPool
{
    public static partial class TestProxy
    {
        static readonly string __ServiceName = "TestProxyPkg.TestProxyB";

        //        [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
        //        static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
        //        {
        //#if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
        //            if (message is global::Google.Protobuf.IBufferMessage)
        //            {
        //                context.SetPayloadLength(message.CalculateSize());
        //                global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        //                context.Complete();
        //                return;
        //            }
        //#endif
        //            context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
        //        }

        //        [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
        //        static class __Helper_MessageCache<T>
        //        {
        //            public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
        //        }

        //        [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
        //        static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
        //        {
        //#if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
        //            if (__Helper_MessageCache<T>.IsBufferMessage)
        //            {
        //                return parser.ParseFrom(context.PayloadAsReadOnlySequence());
        //            }
        //#endif
        //            return parser.ParseFrom(context.PayloadAsNewBuffer());
        //        }

        [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
        static readonly grpc::Marshaller<global::Benchmark.Nano.HandWrittenNoPool.ForwardRequest> __Marshaller_TestProxyPkg_ForwardRequest = grpc::Marshallers.Create(global::Benchmark.Nano.HandWrittenNoPool.ForwardRequest.ContextSerialize, global::Benchmark.Nano.HandWrittenNoPool.ForwardRequest.ContextDeserialize);
        [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
        static readonly grpc::Marshaller<global::Benchmark.Nano.HandWrittenNoPool.ForwardResponse> __Marshaller_TestProxyPkg_ForwardResponse = grpc::Marshallers.Create(global::Benchmark.Nano.HandWrittenNoPool.ForwardResponse.ContextSerialize, global::Benchmark.Nano.HandWrittenNoPool.ForwardResponse.ContextDeserialize);

        [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
        static readonly grpc::Method<global::Benchmark.Nano.HandWrittenNoPool.ForwardRequest, global::Benchmark.Nano.HandWrittenNoPool.ForwardResponse> __Method_Forward = new grpc::Method<global::Benchmark.Nano.HandWrittenNoPool.ForwardRequest, global::Benchmark.Nano.HandWrittenNoPool.ForwardResponse>(
            grpc::MethodType.Unary,
            __ServiceName,
            "Forward",
            __Marshaller_TestProxyPkg_ForwardRequest,
            __Marshaller_TestProxyPkg_ForwardResponse);

        ///// <summary>Service descriptor</summary>
        //public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
        //{
        //    get { return global::Benchmark.Nano.HandWrittenNoPool.TestProxyReflection.Descriptor.Services[0]; }
        //}

        /// <summary>Base class for server-side implementations of TestProxy</summary>
        [grpc::BindServiceMethod(typeof(TestProxy), "BindService")]
        public abstract partial class TestProxyBase
        {
            [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
            public virtual global::System.Threading.Tasks.Task<global::Benchmark.Nano.HandWrittenNoPool.ForwardResponse> Forward(global::Benchmark.Nano.HandWrittenNoPool.ForwardRequest request, grpc::ServerCallContext context)
            {
                throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
            }

        }

        /// <summary>Client for TestProxy</summary>
        public partial class TestProxyClient : grpc::ClientBase<TestProxyClient>
        {
            /// <summary>Creates a new client for TestProxy</summary>
            /// <param name="channel">The channel to use to make remote calls.</param>
            [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
            public TestProxyClient(grpc::ChannelBase channel) : base(channel)
            {
            }
            /// <summary>Creates a new client for TestProxy that uses a custom <c>CallInvoker</c>.</summary>
            /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
            [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
            public TestProxyClient(grpc::CallInvoker callInvoker) : base(callInvoker)
            {
            }
            /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
            [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
            protected TestProxyClient() : base()
            {
            }
            /// <summary>Protected constructor to allow creation of configured clients.</summary>
            /// <param name="configuration">The client configuration.</param>
            [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
            protected TestProxyClient(ClientBaseConfiguration configuration) : base(configuration)
            {
            }

            [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
            public virtual global::Benchmark.Nano.HandWrittenNoPool.ForwardResponse Forward(global::Benchmark.Nano.HandWrittenNoPool.ForwardRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
            {
                return Forward(request, new grpc::CallOptions(headers, deadline, cancellationToken));
            }
            [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
            public virtual global::Benchmark.Nano.HandWrittenNoPool.ForwardResponse Forward(global::Benchmark.Nano.HandWrittenNoPool.ForwardRequest request, grpc::CallOptions options)
            {
                return CallInvoker.BlockingUnaryCall(__Method_Forward, null, options, request);
            }
            [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
            public virtual grpc::AsyncUnaryCall<global::Benchmark.Nano.HandWrittenNoPool.ForwardResponse> ForwardAsync(global::Benchmark.Nano.HandWrittenNoPool.ForwardRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
            {
                return ForwardAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
            }
            [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
            public virtual grpc::AsyncUnaryCall<global::Benchmark.Nano.HandWrittenNoPool.ForwardResponse> ForwardAsync(global::Benchmark.Nano.HandWrittenNoPool.ForwardRequest request, grpc::CallOptions options)
            {
                return CallInvoker.AsyncUnaryCall(__Method_Forward, null, options, request);
            }
            /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
            [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
            protected override TestProxyClient NewInstance(ClientBaseConfiguration configuration)
            {
                return new TestProxyClient(configuration);
            }
        }

        /// <summary>Creates service definition that can be registered with a server</summary>
        /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
        public static grpc::ServerServiceDefinition BindService(TestProxyBase serviceImpl)
        {
            return grpc::ServerServiceDefinition.CreateBuilder()
                .AddMethod(__Method_Forward, serviceImpl.Forward).Build();
        }

        /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
        /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
        /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
        /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
        public static void BindService(grpc::ServiceBinderBase serviceBinder, TestProxyBase serviceImpl)
        {
            serviceBinder.AddMethod(__Method_Forward, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Benchmark.Nano.HandWrittenNoPool.ForwardRequest, global::Benchmark.Nano.HandWrittenNoPool.ForwardResponse>(serviceImpl.Forward));
        }

    }
}
#endregion

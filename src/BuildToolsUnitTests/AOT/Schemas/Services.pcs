// <auto-generated>
//   This file was generated by a tool; you should avoid making direct changes.
//   Consider using 'partial classes' to extend these types
//   Input: Services.generated.cs, targeting C# latest
// </auto-generated>

#region Designer generated code
#pragma warning disable CS0612, CS0618, CS1591, CS3021, IDE0079, IDE1006, RCS1036, RCS1057, RCS1085, RCS1192
namespace GrpcGreeter;
partial class HelloRequest
{
    [global::System.Runtime.CompilerServices.CompilerGenerated]
    [global::System.Diagnostics.DebuggerNonUserCode]
    [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
    internal static void Write(HelloRequest value, ref global::ProtoBuf.Nano.Writer writer)
    {
        if (value.Name is { Length: > 0 } obj1)
        {
            writer.WriteVarint(10); // field 1, string
            writer.WriteWithLengthPrefix(obj1);
        }
    }

    [global::System.Runtime.CompilerServices.CompilerGenerated]
    [global::System.Diagnostics.DebuggerNonUserCode]
    [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
    internal static ulong Measure(HelloRequest value)
    {
        ulong len = 0;
        if (value.Name is { Length: > 0 } obj1)
        {
            len += 1 + global::ProtoBuf.Nano.Writer.MeasureWithLengthPrefix(obj1);
        }
        return len;
    }

    [global::System.Runtime.CompilerServices.CompilerGenerated]
    [global::System.Diagnostics.DebuggerNonUserCode]
    [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
    internal static HelloRequest Merge(HelloRequest value, ref global::ProtoBuf.Nano.Reader reader)
    {
        if (value is null) value = new();
        uint tag;
        while ((tag = reader.ReadTag()) != 0)
        {
            switch (tag)
            {
                case 10: // field 1, string
                    value.Name = reader.ReadString();
                    break;
                default:
                    if ((tag & 7) == 4) // end-group
                    {
                        reader.PushGroup(tag);
                        goto ExitLoop;
                    }
                    switch (tag >> 3)
                    {
                        case 1:
                            reader.ThrowUnhandledWireType(tag);
                            break;
                    }
                    reader.Skip(tag);
                    break;
            }
        }
    ExitLoop:
        return value;
    }

}

partial class HelloReply
{
    [global::System.Runtime.CompilerServices.CompilerGenerated]
    [global::System.Diagnostics.DebuggerNonUserCode]
    [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
    internal static void Write(HelloReply value, ref global::ProtoBuf.Nano.Writer writer)
    {
        if (value.Message is { Length: > 0 } obj1)
        {
            writer.WriteVarint(10); // field 1, string
            writer.WriteWithLengthPrefix(obj1);
        }
    }

    [global::System.Runtime.CompilerServices.CompilerGenerated]
    [global::System.Diagnostics.DebuggerNonUserCode]
    [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
    internal static ulong Measure(HelloReply value)
    {
        ulong len = 0;
        if (value.Message is { Length: > 0 } obj1)
        {
            len += 1 + global::ProtoBuf.Nano.Writer.MeasureWithLengthPrefix(obj1);
        }
        return len;
    }

    [global::System.Runtime.CompilerServices.CompilerGenerated]
    [global::System.Diagnostics.DebuggerNonUserCode]
    [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
    internal static HelloReply Merge(HelloReply value, ref global::ProtoBuf.Nano.Reader reader)
    {
        if (value is null) value = new();
        uint tag;
        while ((tag = reader.ReadTag()) != 0)
        {
            switch (tag)
            {
                case 10: // field 1, string
                    value.Message = reader.ReadString();
                    break;
                default:
                    if ((tag & 7) == 4) // end-group
                    {
                        reader.PushGroup(tag);
                        goto ExitLoop;
                    }
                    switch (tag >> 3)
                    {
                        case 1:
                            reader.ThrowUnhandledWireType(tag);
                            break;
                    }
                    reader.Skip(tag);
                    break;
            }
        }
    ExitLoop:
        return value;
    }

}

partial interface IIIGreeter
{
}

#pragma warning restore CS0612, CS0618, CS1591, CS3021, IDE0079, IDE1006, RCS1036, RCS1057, RCS1085, RCS1192
#endregion

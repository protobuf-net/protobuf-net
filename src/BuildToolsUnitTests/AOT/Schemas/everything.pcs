// <auto-generated>
//   This file was generated by a tool; you should avoid making direct changes.
//   Consider using 'partial classes' to extend these types
//   Input: everything.generated.cs, targeting C# latest
// </auto-generated>

#region Designer generated code
#pragma warning disable CS0612, CS0618, CS1591, CS3021, IDE0079, IDE1006, RCS1036, RCS1057, RCS1085, RCS1192
namespace AllTheThings;
partial class TestNetObject
{
    [global::System.Runtime.CompilerServices.CompilerGenerated]
    [global::System.Diagnostics.DebuggerNonUserCode]
    [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
    internal static void Write(TestNetObject value, ref global::ProtoBuf.Nano.Writer writer)
    {
        if (value.Foo is global::AllTheThings.TestNetObject obj1)
        {
            writer.WriteVarint(10); // field 1, string
            writer.WriteVarint(global::AllTheThings.TestNetObject.Measure(obj1));
            global::AllTheThings.TestNetObject.Write(obj1, ref writer);
        }
        if (value.barRef is global::AllTheThings.TestNetObject obj2)
        {
            writer.WriteVarint(18); // field 2, string
            writer.WriteVarint(global::AllTheThings.TestNetObject.Measure(obj2));
            global::AllTheThings.TestNetObject.Write(obj2, ref writer);
        }
        if (value.barDyn is not null)
        {
            throw new global::System.NotSupportedException("dynamic types/reference-tracking is not supported");
        }
    }

    [global::System.Runtime.CompilerServices.CompilerGenerated]
    [global::System.Diagnostics.DebuggerNonUserCode]
    [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
    internal static ulong Measure(TestNetObject value)
    {
        ulong len = 0;
        if (value.Foo is global::AllTheThings.TestNetObject obj1)
        {
            len += 1 + global::ProtoBuf.Nano.Writer.MeasureWithLengthPrefix(global::AllTheThings.TestNetObject.Measure(obj1));
        }
        if (value.barRef is global::AllTheThings.TestNetObject obj2)
        {
            len += 1 + global::ProtoBuf.Nano.Writer.MeasureWithLengthPrefix(global::AllTheThings.TestNetObject.Measure(obj2));
        }
        if (value.barDyn is not null)
        {
            throw new global::System.NotSupportedException("dynamic types/reference-tracking is not supported");
        }
        return len;
    }

    [global::System.Runtime.CompilerServices.CompilerGenerated]
    [global::System.Diagnostics.DebuggerNonUserCode]
    [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
    internal static TestNetObject Merge(TestNetObject value, ref global::ProtoBuf.Nano.Reader reader)
    {
        ulong oldEnd;
        if (value is null) value = new();
        uint tag;
        while ((tag = reader.ReadTag()) != 0)
        {
            switch (tag)
            {
                case 10: // field 1, string
                    oldEnd = reader.ConstrainByLengthPrefix();
                    value.Foo = global::AllTheThings.TestNetObject.Merge(value.Foo, ref reader);
                    reader.Unconstrain(oldEnd);
                    break;
                case 11: // field 1, group
                    value.Foo = global::AllTheThings.TestNetObject.Merge(value.Foo, ref reader);
                    reader.PopGroup(1);
                    break;
                case 18: // field 2, string
                    oldEnd = reader.ConstrainByLengthPrefix();
                    value.barRef = global::AllTheThings.TestNetObject.Merge(value.barRef, ref reader);
                    reader.Unconstrain(oldEnd);
                    break;
                case 19: // field 2, group
                    value.barRef = global::AllTheThings.TestNetObject.Merge(value.barRef, ref reader);
                    reader.PopGroup(2);
                    break;
                case 26: // field 3, string
                case 27: // field 3, group
                    reader.ThrowNetObjectProxy();
                    break;
                default:
                    if ((tag & 7) == 4) // end-group
                    {
                        reader.PushGroup(tag);
                        goto ExitLoop;
                    }
                    switch (tag >> 3)
                    {
                        case 1:
                        case 2:
                        case 3:
                            reader.ThrowUnhandledWireType(tag);
                            break;
                    }
                    reader.Skip(tag);
                    break;
            }
        }
    ExitLoop:
        return value;
    }

}

partial class MagicValues
{
    [global::System.Runtime.CompilerServices.CompilerGenerated]
    [global::System.Diagnostics.DebuggerNonUserCode]
    [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
    internal static void Write(MagicValues value, ref global::ProtoBuf.Nano.Writer writer)
    {
        writer.WriteVarint(13); // field 1, fixed32
        writer.WriteFixed32(value.A);
        writer.WriteVarint(21); // field 2, fixed32
        writer.WriteFixed32(value.B);
        writer.WriteVarint(29); // field 3, fixed32
        writer.WriteFixed32(value.C);
        writer.WriteVarint(37); // field 4, fixed32
        writer.WriteFixed32(value.D);
        writer.WriteVarint(45); // field 5, fixed32
        writer.WriteFixed32(value.E);
        writer.WriteVarint(53); // field 6, fixed32
        writer.WriteFixed32(value.F);
        writer.WriteVarint(56); // field 7, varint
        writer.WriteVarint(value.G);
        writer.WriteVarint(64); // field 8, varint
        writer.WriteVarint(value.requiredWithDefault);
    }

    [global::System.Runtime.CompilerServices.CompilerGenerated]
    [global::System.Diagnostics.DebuggerNonUserCode]
    [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
    internal static ulong Measure(MagicValues value)
    {
        ulong len = 0;
        len += global::ProtoBuf.Nano.Writer.MeasureVarint(value.requiredWithDefault);
        return len + 33;
    }

    [global::System.Runtime.CompilerServices.CompilerGenerated]
    [global::System.Diagnostics.DebuggerNonUserCode]
    [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
    internal static MagicValues Merge(MagicValues value, ref global::ProtoBuf.Nano.Reader reader)
    {
        if (value is null) value = new();
        uint tag;
        while ((tag = reader.ReadTag()) != 0)
        {
            switch (tag)
            {
                case 13: // field 1, fixed32
                    value.A = reader.ReadFixed32Single();
                    break;
                case 9: // field 1, fixed64
                    value.A = reader.ReadFixed64Single();
                    break;
                case 21: // field 2, fixed32
                    value.B = reader.ReadFixed32Single();
                    break;
                case 17: // field 2, fixed64
                    value.B = reader.ReadFixed64Single();
                    break;
                case 29: // field 3, fixed32
                    value.C = reader.ReadFixed32Single();
                    break;
                case 25: // field 3, fixed64
                    value.C = reader.ReadFixed64Single();
                    break;
                case 37: // field 4, fixed32
                    value.D = reader.ReadFixed32Single();
                    break;
                case 33: // field 4, fixed64
                    value.D = reader.ReadFixed64Single();
                    break;
                case 45: // field 5, fixed32
                    value.E = reader.ReadFixed32Single();
                    break;
                case 41: // field 5, fixed64
                    value.E = reader.ReadFixed64Single();
                    break;
                case 53: // field 6, fixed32
                    value.F = reader.ReadFixed32Single();
                    break;
                case 49: // field 6, fixed64
                    value.F = reader.ReadFixed64Single();
                    break;
                case 56: // field 7, varint
                    value.G = reader.ReadVarintBoolean();
                    break;
                case 61: // field 7, fixed32
                    value.G = reader.ReadFixed32Boolean();
                    break;
                case 57: // field 7, fixed64
                    value.G = reader.ReadFixed64Boolean();
                    break;
                case 64: // field 8, varint
                    value.requiredWithDefault = reader.ReadVarintInt32();
                    break;
                case 69: // field 8, fixed32
                    value.requiredWithDefault = reader.ReadFixed32Int32();
                    break;
                case 65: // field 8, fixed64
                    value.requiredWithDefault = reader.ReadFixed64Int32();
                    break;
                default:
                    if ((tag & 7) == 4) // end-group
                    {
                        reader.PushGroup(tag);
                        goto ExitLoop;
                    }
                    switch (tag >> 3)
                    {
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                            reader.ThrowUnhandledWireType(tag);
                            break;
                    }
                    reader.Skip(tag);
                    break;
            }
        }
    ExitLoop:
        return value;
    }

}

partial class SampleMessage
{
    [global::System.Runtime.CompilerServices.CompilerGenerated]
    [global::System.Diagnostics.DebuggerNonUserCode]
    [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
    internal static void Write(SampleMessage value, ref global::ProtoBuf.Nano.Writer writer)
    {
        if (value.FooName is { Length: > 0 } obj1)
        {
            writer.WriteVarint(10); // field 1, string
            writer.WriteWithLengthPrefix(obj1);
        }
        if (value.Name is { Length: > 0 } obj4)
        {
            writer.WriteVarint(34); // field 4, string
            writer.WriteWithLengthPrefix(obj4);
        }
        writer.WriteVarint(72); // field 9, varint
        writer.WriteVarint(value.SubMessage);
        if (value.Name2 is { Length: > 0 } obj5)
        {
            writer.WriteVarint(42); // field 5, string
            writer.WriteWithLengthPrefix(obj5);
        }
        writer.WriteVarint(80); // field 10, varint
        writer.WriteVarint(value.SubMessage2);
        if (value.BarName is { Length: > 0 } obj12)
        {
            writer.WriteVarint(98); // field 12, string
            writer.WriteWithLengthPrefix(obj12);
        }
    }

    [global::System.Runtime.CompilerServices.CompilerGenerated]
    [global::System.Diagnostics.DebuggerNonUserCode]
    [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
    internal static ulong Measure(SampleMessage value)
    {
        ulong len = 0;
        if (value.FooName is { Length: > 0 } obj1)
        {
            len += 1 + global::ProtoBuf.Nano.Writer.MeasureWithLengthPrefix(obj1);
        }
        if (value.Name is { Length: > 0 } obj4)
        {
            len += 1 + global::ProtoBuf.Nano.Writer.MeasureWithLengthPrefix(obj4);
        }
        if (value.Name2 is { Length: > 0 } obj5)
        {
            len += 1 + global::ProtoBuf.Nano.Writer.MeasureWithLengthPrefix(obj5);
        }
        if (value.BarName is { Length: > 0 } obj12)
        {
            len += 1 + global::ProtoBuf.Nano.Writer.MeasureWithLengthPrefix(obj12);
        }
        return len + 4;
    }

    [global::System.Runtime.CompilerServices.CompilerGenerated]
    [global::System.Diagnostics.DebuggerNonUserCode]
    [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
    internal static SampleMessage Merge(SampleMessage value, ref global::ProtoBuf.Nano.Reader reader)
    {
        if (value is null) value = new();
        uint tag;
        while ((tag = reader.ReadTag()) != 0)
        {
            switch (tag)
            {
                case 10: // field 1, string
                    value.FooName = reader.ReadString();
                    break;
                case 34: // field 4, string
                    value.Name = reader.ReadString();
                    break;
                case 72: // field 9, varint
                    value.SubMessage = reader.ReadVarintBoolean();
                    break;
                case 77: // field 9, fixed32
                    value.SubMessage = reader.ReadFixed32Boolean();
                    break;
                case 73: // field 9, fixed64
                    value.SubMessage = reader.ReadFixed64Boolean();
                    break;
                case 42: // field 5, string
                    value.Name2 = reader.ReadString();
                    break;
                case 80: // field 10, varint
                    value.SubMessage2 = reader.ReadVarintBoolean();
                    break;
                case 85: // field 10, fixed32
                    value.SubMessage2 = reader.ReadFixed32Boolean();
                    break;
                case 81: // field 10, fixed64
                    value.SubMessage2 = reader.ReadFixed64Boolean();
                    break;
                case 98: // field 12, string
                    value.BarName = reader.ReadString();
                    break;
                default:
                    if ((tag & 7) == 4) // end-group
                    {
                        reader.PushGroup(tag);
                        goto ExitLoop;
                    }
                    switch (tag >> 3)
                    {
                        case 1:
                        case 4:
                        case 9:
                        case 5:
                        case 10:
                        case 12:
                            reader.ThrowUnhandledWireType(tag);
                            break;
                    }
                    reader.Skip(tag);
                    break;
            }
        }
    ExitLoop:
        return value;
    }

}

partial class SearchRequest
{
    [global::System.Runtime.CompilerServices.CompilerGenerated]
    [global::System.Diagnostics.DebuggerNonUserCode]
    [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
    internal static void Write(SearchRequest value, ref global::ProtoBuf.Nano.Writer writer)
    {
        if (value.Query is { Length: > 0 } obj1)
        {
            writer.WriteVarint(10); // field 1, string
            writer.WriteWithLengthPrefix(obj1);
        }
        writer.WriteVarint(16); // field 2, varint
        writer.WriteVarint(value.PageNumber);
        writer.WriteVarint(24); // field 3, varint
        writer.WriteVarint(value.ResultPerPage);
    }

    [global::System.Runtime.CompilerServices.CompilerGenerated]
    [global::System.Diagnostics.DebuggerNonUserCode]
    [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
    internal static ulong Measure(SearchRequest value)
    {
        ulong len = 0;
        if (value.Query is { Length: > 0 } obj1)
        {
            len += 1 + global::ProtoBuf.Nano.Writer.MeasureWithLengthPrefix(obj1);
        }
        len += global::ProtoBuf.Nano.Writer.MeasureVarint(value.PageNumber);
        len += global::ProtoBuf.Nano.Writer.MeasureVarint(value.ResultPerPage);
        return len + 2;
    }

    [global::System.Runtime.CompilerServices.CompilerGenerated]
    [global::System.Diagnostics.DebuggerNonUserCode]
    [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
    internal static SearchRequest Merge(SearchRequest value, ref global::ProtoBuf.Nano.Reader reader)
    {
        if (value is null) value = new();
        uint tag;
        while ((tag = reader.ReadTag()) != 0)
        {
            switch (tag)
            {
                case 10: // field 1, string
                    value.Query = reader.ReadString();
                    break;
                case 16: // field 2, varint
                    value.PageNumber = reader.ReadVarintInt32();
                    break;
                case 21: // field 2, fixed32
                    value.PageNumber = reader.ReadFixed32Int32();
                    break;
                case 17: // field 2, fixed64
                    value.PageNumber = reader.ReadFixed64Int32();
                    break;
                case 24: // field 3, varint
                    value.ResultPerPage = reader.ReadVarintInt32();
                    break;
                case 29: // field 3, fixed32
                    value.ResultPerPage = reader.ReadFixed32Int32();
                    break;
                case 25: // field 3, fixed64
                    value.ResultPerPage = reader.ReadFixed64Int32();
                    break;
                default:
                    if ((tag & 7) == 4) // end-group
                    {
                        reader.PushGroup(tag);
                        goto ExitLoop;
                    }
                    switch (tag >> 3)
                    {
                        case 1:
                        case 2:
                        case 3:
                            reader.ThrowUnhandledWireType(tag);
                            break;
                    }
                    reader.Skip(tag);
                    break;
            }
        }
    ExitLoop:
        return value;
    }

}

partial class SearchResponse
{
    partial class Result
    {
        [global::System.Runtime.CompilerServices.CompilerGenerated]
        [global::System.Diagnostics.DebuggerNonUserCode]
        [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
        internal static void Write(Result value, ref global::ProtoBuf.Nano.Writer writer)
        {
            if (value.Url is { Length: > 0 } obj1)
            {
                writer.WriteVarint(10); // field 1, string
                writer.WriteWithLengthPrefix(obj1);
            }
            if (value.Title is { Length: > 0 } obj2)
            {
                writer.WriteVarint(18); // field 2, string
                writer.WriteWithLengthPrefix(obj2);
            }
        #if NET5_0_OR_GREATER
            foreach (var __pbn_item in System.Runtime.InteropServices.CollectionsMarshal.AsSpan(value.Snippets))
        #else
            foreach (var __pbn_item in value.Snippets)
        #endif
            {
                writer.WriteVarint(26); // field 3, string
                writer.WriteWithLengthPrefix(__pbn_item);
            }
        }

        [global::System.Runtime.CompilerServices.CompilerGenerated]
        [global::System.Diagnostics.DebuggerNonUserCode]
        [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
        internal static ulong Measure(Result value)
        {
            ulong len = 0;
            if (value.Url is { Length: > 0 } obj1)
            {
                len += 1 + global::ProtoBuf.Nano.Writer.MeasureWithLengthPrefix(obj1);
            }
            if (value.Title is { Length: > 0 } obj2)
            {
                len += 1 + global::ProtoBuf.Nano.Writer.MeasureWithLengthPrefix(obj2);
            }
        #if NET5_0_OR_GREATER
            foreach (var __pbn_item in System.Runtime.InteropServices.CollectionsMarshal.AsSpan(value.Snippets))
        #else
            foreach (var __pbn_item in value.Snippets)
        #endif
            {
                len += 1 + global::ProtoBuf.Nano.Writer.MeasureWithLengthPrefix(__pbn_item);
                len += 0;
            }
            return len;
        }

        [global::System.Runtime.CompilerServices.CompilerGenerated]
        [global::System.Diagnostics.DebuggerNonUserCode]
        [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
        internal static Result Merge(Result value, ref global::ProtoBuf.Nano.Reader reader)
        {
            if (value is null) value = new();
            uint tag;
            while ((tag = reader.ReadTag()) != 0)
            {
                switch (tag)
                {
                    case 10: // field 1, string
                        value.Url = reader.ReadString();
                        break;
                    case 18: // field 2, string
                        value.Title = reader.ReadString();
                        break;
                    case 26: // field 3, string
                        do
                        {
                            value.Snippets.Add(reader.ReadString());
                        }
                        while (reader.TryReadTag(26));
                        break;
                    default:
                        if ((tag & 7) == 4) // end-group
                        {
                            reader.PushGroup(tag);
                            goto ExitLoop;
                        }
                        switch (tag >> 3)
                        {
                            case 1:
                            case 2:
                            case 3:
                                reader.ThrowUnhandledWireType(tag);
                                break;
                        }
                        reader.Skip(tag);
                        break;
                }
            }
        ExitLoop:
            return value;
        }

    }

    partial class Grouped
    {
        [global::System.Runtime.CompilerServices.CompilerGenerated]
        [global::System.Diagnostics.DebuggerNonUserCode]
        [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
        internal static void Write(Grouped value, ref global::ProtoBuf.Nano.Writer writer)
        {
            if (value.Url is { Length: > 0 } obj2)
            {
                writer.WriteVarint(18); // field 2, string
                writer.WriteWithLengthPrefix(obj2);
            }
            if (value.Title is { Length: > 0 } obj3)
            {
                writer.WriteVarint(26); // field 3, string
                writer.WriteWithLengthPrefix(obj3);
            }
        #if NET5_0_OR_GREATER
            foreach (var __pbn_item in System.Runtime.InteropServices.CollectionsMarshal.AsSpan(value.Snippets))
        #else
            foreach (var __pbn_item in value.Snippets)
        #endif
            {
                writer.WriteVarint(34); // field 4, string
                writer.WriteWithLengthPrefix(__pbn_item);
            }
        }

        [global::System.Runtime.CompilerServices.CompilerGenerated]
        [global::System.Diagnostics.DebuggerNonUserCode]
        [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
        internal static ulong Measure(Grouped value)
        {
            ulong len = 0;
            if (value.Url is { Length: > 0 } obj2)
            {
                len += 1 + global::ProtoBuf.Nano.Writer.MeasureWithLengthPrefix(obj2);
            }
            if (value.Title is { Length: > 0 } obj3)
            {
                len += 1 + global::ProtoBuf.Nano.Writer.MeasureWithLengthPrefix(obj3);
            }
        #if NET5_0_OR_GREATER
            foreach (var __pbn_item in System.Runtime.InteropServices.CollectionsMarshal.AsSpan(value.Snippets))
        #else
            foreach (var __pbn_item in value.Snippets)
        #endif
            {
                len += 1 + global::ProtoBuf.Nano.Writer.MeasureWithLengthPrefix(__pbn_item);
                len += 0;
            }
            return len;
        }

        [global::System.Runtime.CompilerServices.CompilerGenerated]
        [global::System.Diagnostics.DebuggerNonUserCode]
        [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
        internal static Grouped Merge(Grouped value, ref global::ProtoBuf.Nano.Reader reader)
        {
            if (value is null) value = new();
            uint tag;
            while ((tag = reader.ReadTag()) != 0)
            {
                switch (tag)
                {
                    case 18: // field 2, string
                        value.Url = reader.ReadString();
                        break;
                    case 26: // field 3, string
                        value.Title = reader.ReadString();
                        break;
                    case 34: // field 4, string
                        do
                        {
                            value.Snippets.Add(reader.ReadString());
                        }
                        while (reader.TryReadTag(34));
                        break;
                    default:
                        if ((tag & 7) == 4) // end-group
                        {
                            reader.PushGroup(tag);
                            goto ExitLoop;
                        }
                        switch (tag >> 3)
                        {
                            case 2:
                            case 3:
                            case 4:
                                reader.ThrowUnhandledWireType(tag);
                                break;
                        }
                        reader.Skip(tag);
                        break;
                }
            }
        ExitLoop:
            return value;
        }

    }

    partial class Upper
    {
        [global::System.Runtime.CompilerServices.CompilerGenerated]
        [global::System.Diagnostics.DebuggerNonUserCode]
        [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
        internal static void Write(Upper value, ref global::ProtoBuf.Nano.Writer writer)
        {
            if (value.Url is { Length: > 0 } obj2)
            {
                writer.WriteVarint(18); // field 2, string
                writer.WriteWithLengthPrefix(obj2);
            }
            if (value.Title is { Length: > 0 } obj3)
            {
                writer.WriteVarint(26); // field 3, string
                writer.WriteWithLengthPrefix(obj3);
            }
        #if NET5_0_OR_GREATER
            foreach (var __pbn_item in System.Runtime.InteropServices.CollectionsMarshal.AsSpan(value.Snippets))
        #else
            foreach (var __pbn_item in value.Snippets)
        #endif
            {
                writer.WriteVarint(34); // field 4, string
                writer.WriteWithLengthPrefix(__pbn_item);
            }
        }

        [global::System.Runtime.CompilerServices.CompilerGenerated]
        [global::System.Diagnostics.DebuggerNonUserCode]
        [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
        internal static ulong Measure(Upper value)
        {
            ulong len = 0;
            if (value.Url is { Length: > 0 } obj2)
            {
                len += 1 + global::ProtoBuf.Nano.Writer.MeasureWithLengthPrefix(obj2);
            }
            if (value.Title is { Length: > 0 } obj3)
            {
                len += 1 + global::ProtoBuf.Nano.Writer.MeasureWithLengthPrefix(obj3);
            }
        #if NET5_0_OR_GREATER
            foreach (var __pbn_item in System.Runtime.InteropServices.CollectionsMarshal.AsSpan(value.Snippets))
        #else
            foreach (var __pbn_item in value.Snippets)
        #endif
            {
                len += 1 + global::ProtoBuf.Nano.Writer.MeasureWithLengthPrefix(__pbn_item);
                len += 0;
            }
            return len;
        }

        [global::System.Runtime.CompilerServices.CompilerGenerated]
        [global::System.Diagnostics.DebuggerNonUserCode]
        [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
        internal static Upper Merge(Upper value, ref global::ProtoBuf.Nano.Reader reader)
        {
            if (value is null) value = new();
            uint tag;
            while ((tag = reader.ReadTag()) != 0)
            {
                switch (tag)
                {
                    case 18: // field 2, string
                        value.Url = reader.ReadString();
                        break;
                    case 26: // field 3, string
                        value.Title = reader.ReadString();
                        break;
                    case 34: // field 4, string
                        do
                        {
                            value.Snippets.Add(reader.ReadString());
                        }
                        while (reader.TryReadTag(34));
                        break;
                    default:
                        if ((tag & 7) == 4) // end-group
                        {
                            reader.PushGroup(tag);
                            goto ExitLoop;
                        }
                        switch (tag >> 3)
                        {
                            case 2:
                            case 3:
                            case 4:
                                reader.ThrowUnhandledWireType(tag);
                                break;
                        }
                        reader.Skip(tag);
                        break;
                }
            }
        ExitLoop:
            return value;
        }

    }

    [global::System.Runtime.CompilerServices.CompilerGenerated]
    [global::System.Diagnostics.DebuggerNonUserCode]
    [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
    internal static void Write(SearchResponse value, ref global::ProtoBuf.Nano.Writer writer)
    {
    #if NET5_0_OR_GREATER
        foreach (var __pbn_item in System.Runtime.InteropServices.CollectionsMarshal.AsSpan(value.Results))
    #else
        foreach (var __pbn_item in value.Results)
    #endif
        {
            writer.WriteVarint(10); // field 1, string
            writer.WriteVarint(global::AllTheThings.SearchResponse.Result.Measure(__pbn_item));
            global::AllTheThings.SearchResponse.Result.Write(__pbn_item, ref writer);
        }
    #if NET5_0_OR_GREATER
        foreach (var __pbn_item in System.Runtime.InteropServices.CollectionsMarshal.AsSpan(value.Groupeds))
    #else
        foreach (var __pbn_item in value.Groupeds)
    #endif
        {
            writer.WriteVarint(82); // field 10, string
            writer.WriteVarint(global::AllTheThings.SearchResponse.Grouped.Measure(__pbn_item));
            global::AllTheThings.SearchResponse.Grouped.Write(__pbn_item, ref writer);
        }
        if (value.UpperValue is global::AllTheThings.SearchResponse.Upper obj12)
        {
            writer.WriteVarint(98); // field 12, string
            writer.WriteVarint(global::AllTheThings.SearchResponse.Upper.Measure(obj12));
            global::AllTheThings.SearchResponse.Upper.Write(obj12, ref writer);
        }
    }

    [global::System.Runtime.CompilerServices.CompilerGenerated]
    [global::System.Diagnostics.DebuggerNonUserCode]
    [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
    internal static ulong Measure(SearchResponse value)
    {
        ulong len = 0;
    #if NET5_0_OR_GREATER
        foreach (var __pbn_item in System.Runtime.InteropServices.CollectionsMarshal.AsSpan(value.Results))
    #else
        foreach (var __pbn_item in value.Results)
    #endif
        {
            len += 1 + global::ProtoBuf.Nano.Writer.MeasureWithLengthPrefix(global::AllTheThings.SearchResponse.Result.Measure(__pbn_item));
            len += 0;
        }
    #if NET5_0_OR_GREATER
        foreach (var __pbn_item in System.Runtime.InteropServices.CollectionsMarshal.AsSpan(value.Groupeds))
    #else
        foreach (var __pbn_item in value.Groupeds)
    #endif
        {
            len += 1 + global::ProtoBuf.Nano.Writer.MeasureWithLengthPrefix(global::AllTheThings.SearchResponse.Grouped.Measure(__pbn_item));
            len += 0;
        }
        if (value.UpperValue is global::AllTheThings.SearchResponse.Upper obj12)
        {
            len += 1 + global::ProtoBuf.Nano.Writer.MeasureWithLengthPrefix(global::AllTheThings.SearchResponse.Upper.Measure(obj12));
        }
        return len;
    }

    [global::System.Runtime.CompilerServices.CompilerGenerated]
    [global::System.Diagnostics.DebuggerNonUserCode]
    [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
    internal static SearchResponse Merge(SearchResponse value, ref global::ProtoBuf.Nano.Reader reader)
    {
        ulong oldEnd;
        if (value is null) value = new();
        uint tag;
        while ((tag = reader.ReadTag()) != 0)
        {
            switch (tag)
            {
                case 10: // field 1, string
                    do
                    {
                        oldEnd = reader.ConstrainByLengthPrefix();
                        value.Results.Add(global::AllTheThings.SearchResponse.Result.Merge(default, ref reader));
                        reader.Unconstrain(oldEnd);
                    }
                    while (reader.TryReadTag(10));
                    break;
                case 11: // field 1, group
                    do
                    {
                        value.Results.Add(global::AllTheThings.SearchResponse.Result.Merge(default, ref reader));
                        reader.PopGroup(1);
                    }
                    while (reader.TryReadTag(11));
                    break;
                case 82: // field 10, string
                    do
                    {
                        oldEnd = reader.ConstrainByLengthPrefix();
                        value.Groupeds.Add(global::AllTheThings.SearchResponse.Grouped.Merge(default, ref reader));
                        reader.Unconstrain(oldEnd);
                    }
                    while (reader.TryReadTag(82));
                    break;
                case 83: // field 10, group
                    do
                    {
                        value.Groupeds.Add(global::AllTheThings.SearchResponse.Grouped.Merge(default, ref reader));
                        reader.PopGroup(10);
                    }
                    while (reader.TryReadTag(83));
                    break;
                case 98: // field 12, string
                    oldEnd = reader.ConstrainByLengthPrefix();
                    value.UpperValue = global::AllTheThings.SearchResponse.Upper.Merge(value.UpperValue, ref reader);
                    reader.Unconstrain(oldEnd);
                    break;
                case 99: // field 12, group
                    value.UpperValue = global::AllTheThings.SearchResponse.Upper.Merge(value.UpperValue, ref reader);
                    reader.PopGroup(12);
                    break;
                default:
                    if ((tag & 7) == 4) // end-group
                    {
                        reader.PushGroup(tag);
                        goto ExitLoop;
                    }
                    switch (tag >> 3)
                    {
                        case 1:
                        case 10:
                        case 12:
                            reader.ThrowUnhandledWireType(tag);
                            break;
                    }
                    reader.Skip(tag);
                    break;
            }
        }
    ExitLoop:
        return value;
    }

}

partial class Outer
{
    partial class MiddleAA
    {
        partial class Inner
        {
            [global::System.Runtime.CompilerServices.CompilerGenerated]
            [global::System.Diagnostics.DebuggerNonUserCode]
            [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
            internal static void Write(Inner value, ref global::ProtoBuf.Nano.Writer writer)
            {
                writer.WriteVarint(8); // field 1, varint
                writer.WriteVarint(value.Ival);
                writer.WriteVarint(16); // field 2, varint
                writer.WriteVarint(value.Booly);
            }

            [global::System.Runtime.CompilerServices.CompilerGenerated]
            [global::System.Diagnostics.DebuggerNonUserCode]
            [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
            internal static ulong Measure(Inner value)
            {
                ulong len = 0;
                len += global::ProtoBuf.Nano.Writer.MeasureVarint(value.Ival);
                return len + 3;
            }

            [global::System.Runtime.CompilerServices.CompilerGenerated]
            [global::System.Diagnostics.DebuggerNonUserCode]
            [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
            internal static Inner Merge(Inner value, ref global::ProtoBuf.Nano.Reader reader)
            {
                if (value is null) value = new();
                uint tag;
                while ((tag = reader.ReadTag()) != 0)
                {
                    switch (tag)
                    {
                        case 8: // field 1, varint
                            value.Ival = reader.ReadVarintInt64();
                            break;
                        case 13: // field 1, fixed32
                            value.Ival = reader.ReadFixed32Int64();
                            break;
                        case 9: // field 1, fixed64
                            value.Ival = reader.ReadFixed64Int64();
                            break;
                        case 16: // field 2, varint
                            value.Booly = reader.ReadVarintBoolean();
                            break;
                        case 21: // field 2, fixed32
                            value.Booly = reader.ReadFixed32Boolean();
                            break;
                        case 17: // field 2, fixed64
                            value.Booly = reader.ReadFixed64Boolean();
                            break;
                        default:
                            if ((tag & 7) == 4) // end-group
                            {
                                reader.PushGroup(tag);
                                goto ExitLoop;
                            }
                            switch (tag >> 3)
                            {
                                case 1:
                                case 2:
                                    reader.ThrowUnhandledWireType(tag);
                                    break;
                            }
                            reader.Skip(tag);
                            break;
                    }
                }
            ExitLoop:
                return value;
            }

        }

        [global::System.Runtime.CompilerServices.CompilerGenerated]
        [global::System.Diagnostics.DebuggerNonUserCode]
        [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
        internal static void Write(MiddleAA value, ref global::ProtoBuf.Nano.Writer writer)
        {
        }

        [global::System.Runtime.CompilerServices.CompilerGenerated]
        [global::System.Diagnostics.DebuggerNonUserCode]
        [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
        internal static ulong Measure(MiddleAA value)
        {
            ulong len = 0;
            return len;
        }

        [global::System.Runtime.CompilerServices.CompilerGenerated]
        [global::System.Diagnostics.DebuggerNonUserCode]
        [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
        internal static MiddleAA Merge(MiddleAA value, ref global::ProtoBuf.Nano.Reader reader)
        {
            if (value is null) value = new();
            uint tag;
            while ((tag = reader.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        if ((tag & 7) == 4) // end-group
                        {
                            reader.PushGroup(tag);
                            goto ExitLoop;
                        }
                        reader.Skip(tag);
                        break;
                }
            }
        ExitLoop:
            return value;
        }

    }

    partial class MiddleBB
    {
        partial class Inner
        {
            [global::System.Runtime.CompilerServices.CompilerGenerated]
            [global::System.Diagnostics.DebuggerNonUserCode]
            [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
            internal static void Write(Inner value, ref global::ProtoBuf.Nano.Writer writer)
            {
                writer.WriteVarint(8); // field 1, varint
                writer.WriteVarint(value.Ival);
                writer.WriteVarint(16); // field 2, varint
                writer.WriteVarint(value.Booly);
            }

            [global::System.Runtime.CompilerServices.CompilerGenerated]
            [global::System.Diagnostics.DebuggerNonUserCode]
            [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
            internal static ulong Measure(Inner value)
            {
                ulong len = 0;
                len += global::ProtoBuf.Nano.Writer.MeasureVarint(value.Ival);
                return len + 3;
            }

            [global::System.Runtime.CompilerServices.CompilerGenerated]
            [global::System.Diagnostics.DebuggerNonUserCode]
            [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
            internal static Inner Merge(Inner value, ref global::ProtoBuf.Nano.Reader reader)
            {
                if (value is null) value = new();
                uint tag;
                while ((tag = reader.ReadTag()) != 0)
                {
                    switch (tag)
                    {
                        case 8: // field 1, varint
                            value.Ival = reader.ReadVarintInt32();
                            break;
                        case 13: // field 1, fixed32
                            value.Ival = reader.ReadFixed32Int32();
                            break;
                        case 9: // field 1, fixed64
                            value.Ival = reader.ReadFixed64Int32();
                            break;
                        case 16: // field 2, varint
                            value.Booly = reader.ReadVarintBoolean();
                            break;
                        case 21: // field 2, fixed32
                            value.Booly = reader.ReadFixed32Boolean();
                            break;
                        case 17: // field 2, fixed64
                            value.Booly = reader.ReadFixed64Boolean();
                            break;
                        default:
                            if ((tag & 7) == 4) // end-group
                            {
                                reader.PushGroup(tag);
                                goto ExitLoop;
                            }
                            switch (tag >> 3)
                            {
                                case 1:
                                case 2:
                                    reader.ThrowUnhandledWireType(tag);
                                    break;
                            }
                            reader.Skip(tag);
                            break;
                    }
                }
            ExitLoop:
                return value;
            }

        }

        [global::System.Runtime.CompilerServices.CompilerGenerated]
        [global::System.Diagnostics.DebuggerNonUserCode]
        [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
        internal static void Write(MiddleBB value, ref global::ProtoBuf.Nano.Writer writer)
        {
        }

        [global::System.Runtime.CompilerServices.CompilerGenerated]
        [global::System.Diagnostics.DebuggerNonUserCode]
        [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
        internal static ulong Measure(MiddleBB value)
        {
            ulong len = 0;
            return len;
        }

        [global::System.Runtime.CompilerServices.CompilerGenerated]
        [global::System.Diagnostics.DebuggerNonUserCode]
        [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
        internal static MiddleBB Merge(MiddleBB value, ref global::ProtoBuf.Nano.Reader reader)
        {
            if (value is null) value = new();
            uint tag;
            while ((tag = reader.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        if ((tag & 7) == 4) // end-group
                        {
                            reader.PushGroup(tag);
                            goto ExitLoop;
                        }
                        reader.Skip(tag);
                        break;
                }
            }
        ExitLoop:
            return value;
        }

    }

    [global::System.Runtime.CompilerServices.CompilerGenerated]
    [global::System.Diagnostics.DebuggerNonUserCode]
    [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
    internal static void Write(Outer value, ref global::ProtoBuf.Nano.Writer writer)
    {
    }

    [global::System.Runtime.CompilerServices.CompilerGenerated]
    [global::System.Diagnostics.DebuggerNonUserCode]
    [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
    internal static ulong Measure(Outer value)
    {
        ulong len = 0;
        return len;
    }

    [global::System.Runtime.CompilerServices.CompilerGenerated]
    [global::System.Diagnostics.DebuggerNonUserCode]
    [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
    internal static Outer Merge(Outer value, ref global::ProtoBuf.Nano.Reader reader)
    {
        ulong oldEnd;
        if (value is null) value = new();
        uint tag;
        while ((tag = reader.ReadTag()) != 0)
        {
            switch (tag)
            {
                default:
                    if ((tag & 7) == 4) // end-group
                    {
                        reader.PushGroup(tag);
                        goto ExitLoop;
                    }
                    switch (tag >> 3)
                    {
                        case 7:
                        case 8:
                            reader.ThrowUnhandledWireType(tag);
                            break;
                    }
                    reader.Skip(tag);
                    break;
            }
        }
    ExitLoop:
        return value;
    }

}

partial class SomeOtherMessage
{
    [global::System.Runtime.CompilerServices.CompilerGenerated]
    [global::System.Diagnostics.DebuggerNonUserCode]
    [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
    internal static void Write(SomeOtherMessage value, ref global::ProtoBuf.Nano.Writer writer)
    {
        if (value.Result is { Length: > 0 } obj1)
        {
            writer.WriteVarint(10); // field 1, string
            writer.WriteWithLengthPrefix(obj1);
        }
    }

    [global::System.Runtime.CompilerServices.CompilerGenerated]
    [global::System.Diagnostics.DebuggerNonUserCode]
    [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
    internal static ulong Measure(SomeOtherMessage value)
    {
        ulong len = 0;
        if (value.Result is { Length: > 0 } obj1)
        {
            len += 1 + global::ProtoBuf.Nano.Writer.MeasureWithLengthPrefix(obj1);
        }
        return len;
    }

    [global::System.Runtime.CompilerServices.CompilerGenerated]
    [global::System.Diagnostics.DebuggerNonUserCode]
    [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
    internal static SomeOtherMessage Merge(SomeOtherMessage value, ref global::ProtoBuf.Nano.Reader reader)
    {
        if (value is null) value = new();
        uint tag;
        while ((tag = reader.ReadTag()) != 0)
        {
            switch (tag)
            {
                case 10: // field 1, string
                    value.Result = reader.ReadString();
                    break;
                default:
                    if ((tag & 7) == 4) // end-group
                    {
                        reader.PushGroup(tag);
                        goto ExitLoop;
                    }
                    switch (tag >> 3)
                    {
                        case 1:
                            reader.ThrowUnhandledWireType(tag);
                            break;
                    }
                    reader.Skip(tag);
                    break;
            }
        }
    ExitLoop:
        return value;
    }

}

partial class FieldRules
{
    [global::System.Runtime.CompilerServices.CompilerGenerated]
    [global::System.Diagnostics.DebuggerNonUserCode]
    [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
    internal static void Write(FieldRules value, ref global::ProtoBuf.Nano.Writer writer)
    {
        writer.WriteVarint(8); // field 1, varint
        writer.WriteVarint(value.Required);
        writer.WriteVarint(16); // field 2, varint
        writer.WriteVarint(value.Optional);
    #if NET5_0_OR_GREATER
        foreach (var __pbn_item in System.Runtime.InteropServices.CollectionsMarshal.AsSpan(value.Repeateds))
    #else
        foreach (var __pbn_item in value.Repeateds)
    #endif
        {
            writer.WriteVarint(24); // field 3, varint
            writer.WriteVarint(__pbn_item);
        }
    #if NET5_0_OR_GREATER
        foreach (var __pbn_item in System.Runtime.InteropServices.CollectionsMarshal.AsSpan(value.Packeds))
    #else
        foreach (var __pbn_item in value.Packeds)
    #endif
        {
            writer.WriteVarint(32); // field 4, varint
            writer.WriteVarint(__pbn_item);
        }
    }

    [global::System.Runtime.CompilerServices.CompilerGenerated]
    [global::System.Diagnostics.DebuggerNonUserCode]
    [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
    internal static ulong Measure(FieldRules value)
    {
        ulong len = 0;
        len += global::ProtoBuf.Nano.Writer.MeasureVarint(value.Required);
        len += global::ProtoBuf.Nano.Writer.MeasureVarint(value.Optional);
    #if NET5_0_OR_GREATER
        foreach (var __pbn_item in System.Runtime.InteropServices.CollectionsMarshal.AsSpan(value.Repeateds))
    #else
        foreach (var __pbn_item in value.Repeateds)
    #endif
        {
            len += global::ProtoBuf.Nano.Writer.MeasureVarint(__pbn_item) + 1;
        }
    #if NET5_0_OR_GREATER
        foreach (var __pbn_item in System.Runtime.InteropServices.CollectionsMarshal.AsSpan(value.Packeds))
    #else
        foreach (var __pbn_item in value.Packeds)
    #endif
        {
            len += global::ProtoBuf.Nano.Writer.MeasureVarint(__pbn_item) + 1;
        }
        return len + 2;
    }

    [global::System.Runtime.CompilerServices.CompilerGenerated]
    [global::System.Diagnostics.DebuggerNonUserCode]
    [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
    internal static FieldRules Merge(FieldRules value, ref global::ProtoBuf.Nano.Reader reader)
    {
        ulong packed;
        if (value is null) value = new();
        uint tag;
        while ((tag = reader.ReadTag()) != 0)
        {
            switch (tag)
            {
                case 8: // field 1, varint
                    value.Required = reader.ReadVarintInt32();
                    break;
                case 13: // field 1, fixed32
                    value.Required = reader.ReadFixed32Int32();
                    break;
                case 9: // field 1, fixed64
                    value.Required = reader.ReadFixed64Int32();
                    break;
                case 16: // field 2, varint
                    value.Optional = reader.ReadVarintInt32();
                    break;
                case 21: // field 2, fixed32
                    value.Optional = reader.ReadFixed32Int32();
                    break;
                case 17: // field 2, fixed64
                    value.Optional = reader.ReadFixed64Int32();
                    break;
                case 24: // field 3, varint
                    do
                    {
                        value.Repeateds.Add(reader.ReadVarintInt32());
                    }
                    while (reader.TryReadTag(24));
                    break;
                case 26: // field 3, string (packed)
                    packed = reader.ReadVarintUInt64() + reader.Position;
                    while (reader.Position < packed)
                    {
                        value.Repeateds.Add(reader.ReadVarintInt32());
                    }
                    break;
                case 29: // field 3, fixed32
                    do
                    {
                        value.Repeateds.Add(reader.ReadFixed32Int32());
                    }
                    while (reader.TryReadTag(29));
                    break;
                case 25: // field 3, fixed64
                    do
                    {
                        value.Repeateds.Add(reader.ReadFixed64Int32());
                    }
                    while (reader.TryReadTag(25));
                    break;
                case 32: // field 4, varint
                    do
                    {
                        value.Packeds.Add(reader.ReadVarintInt32());
                    }
                    while (reader.TryReadTag(32));
                    break;
                case 34: // field 4, string (packed)
                    packed = reader.ReadVarintUInt64() + reader.Position;
                    while (reader.Position < packed)
                    {
                        value.Packeds.Add(reader.ReadVarintInt32());
                    }
                    break;
                case 37: // field 4, fixed32
                    do
                    {
                        value.Packeds.Add(reader.ReadFixed32Int32());
                    }
                    while (reader.TryReadTag(37));
                    break;
                case 33: // field 4, fixed64
                    do
                    {
                        value.Packeds.Add(reader.ReadFixed64Int32());
                    }
                    while (reader.TryReadTag(33));
                    break;
                default:
                    if ((tag & 7) == 4) // end-group
                    {
                        reader.PushGroup(tag);
                        goto ExitLoop;
                    }
                    switch (tag >> 3)
                    {
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                            reader.ThrowUnhandledWireType(tag);
                            break;
                    }
                    reader.Skip(tag);
                    break;
            }
        }
    ExitLoop:
        return value;
    }

}

partial class TagRanges
{
    [global::System.Runtime.CompilerServices.CompilerGenerated]
    [global::System.Diagnostics.DebuggerNonUserCode]
    [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
    internal static void Write(TagRanges value, ref global::ProtoBuf.Nano.Writer writer)
    {
    #if NET5_0_OR_GREATER
        foreach (var __pbn_item in System.Runtime.InteropServices.CollectionsMarshal.AsSpan(value.His))
    #else
        foreach (var __pbn_item in value.His)
    #endif
        {
            writer.WriteVarint(4294967290); // field 536870911, string
            writer.WriteWithLengthPrefix(__pbn_item);
        }
        if (value.Lo is { Length: > 0 } obj1)
        {
            writer.WriteVarint(10); // field 1, string
            writer.WriteWithLengthPrefix(obj1);
        }
    }

    [global::System.Runtime.CompilerServices.CompilerGenerated]
    [global::System.Diagnostics.DebuggerNonUserCode]
    [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
    internal static ulong Measure(TagRanges value)
    {
        ulong len = 0;
    #if NET5_0_OR_GREATER
        foreach (var __pbn_item in System.Runtime.InteropServices.CollectionsMarshal.AsSpan(value.His))
    #else
        foreach (var __pbn_item in value.His)
    #endif
        {
            len += 5 + global::ProtoBuf.Nano.Writer.MeasureWithLengthPrefix(__pbn_item);
            len += 0;
        }
        if (value.Lo is { Length: > 0 } obj1)
        {
            len += 1 + global::ProtoBuf.Nano.Writer.MeasureWithLengthPrefix(obj1);
        }
        return len;
    }

    [global::System.Runtime.CompilerServices.CompilerGenerated]
    [global::System.Diagnostics.DebuggerNonUserCode]
    [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
    internal static TagRanges Merge(TagRanges value, ref global::ProtoBuf.Nano.Reader reader)
    {
        if (value is null) value = new();
        uint tag;
        while ((tag = reader.ReadTag()) != 0)
        {
            switch (tag)
            {
                case 4294967290: // field 536870911, string
                    do
                    {
                        value.His.Add(reader.ReadString());
                    }
                    while (reader.TryReadTag(4294967290));
                    break;
                case 10: // field 1, string
                    value.Lo = reader.ReadString();
                    break;
                default:
                    if ((tag & 7) == 4) // end-group
                    {
                        reader.PushGroup(tag);
                        goto ExitLoop;
                    }
                    switch (tag >> 3)
                    {
                        case 536870911:
                        case 1:
                            reader.ThrowUnhandledWireType(tag);
                            break;
                    }
                    reader.Skip(tag);
                    break;
            }
        }
    ExitLoop:
        return value;
    }

}

partial class Foo
{
    [global::System.Runtime.CompilerServices.CompilerGenerated]
    [global::System.Diagnostics.DebuggerNonUserCode]
    [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
    internal static void Write(Foo value, ref global::ProtoBuf.Nano.Writer writer)
    {
    }

    [global::System.Runtime.CompilerServices.CompilerGenerated]
    [global::System.Diagnostics.DebuggerNonUserCode]
    [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
    internal static ulong Measure(Foo value)
    {
        ulong len = 0;
        return len;
    }

    [global::System.Runtime.CompilerServices.CompilerGenerated]
    [global::System.Diagnostics.DebuggerNonUserCode]
    [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
    internal static Foo Merge(Foo value, ref global::ProtoBuf.Nano.Reader reader)
    {
        if (value is null) value = new();
        uint tag;
        while ((tag = reader.ReadTag()) != 0)
        {
            switch (tag)
            {
                default:
                    if ((tag & 7) == 4) // end-group
                    {
                        reader.PushGroup(tag);
                        goto ExitLoop;
                    }
                    reader.Skip(tag);
                    break;
            }
        }
    ExitLoop:
        return value;
    }

}

partial class Baz
{
    [global::System.Runtime.CompilerServices.CompilerGenerated]
    [global::System.Diagnostics.DebuggerNonUserCode]
    [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
    internal static void Write(Baz value, ref global::ProtoBuf.Nano.Writer writer)
    {
    }

    [global::System.Runtime.CompilerServices.CompilerGenerated]
    [global::System.Diagnostics.DebuggerNonUserCode]
    [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
    internal static ulong Measure(Baz value)
    {
        ulong len = 0;
        return len;
    }

    [global::System.Runtime.CompilerServices.CompilerGenerated]
    [global::System.Diagnostics.DebuggerNonUserCode]
    [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
    internal static Baz Merge(Baz value, ref global::ProtoBuf.Nano.Reader reader)
    {
        if (value is null) value = new();
        uint tag;
        while ((tag = reader.ReadTag()) != 0)
        {
            switch (tag)
            {
                default:
                    if ((tag & 7) == 4) // end-group
                    {
                        reader.PushGroup(tag);
                        goto ExitLoop;
                    }
                    reader.Skip(tag);
                    break;
            }
        }
    ExitLoop:
        return value;
    }

}

partial class PrimitiveFieldTypes
{
    [global::System.Runtime.CompilerServices.CompilerGenerated]
    [global::System.Diagnostics.DebuggerNonUserCode]
    [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
    internal static void Write(PrimitiveFieldTypes value, ref global::ProtoBuf.Nano.Writer writer)
    {
        writer.WriteVarint(9); // field 1, fixed64
        writer.WriteFixed64(value.Double);
        writer.WriteVarint(21); // field 2, fixed32
        writer.WriteFixed32(value.Float);
        writer.WriteVarint(24); // field 3, varint
        writer.WriteVarint(value.Int32);
        writer.WriteVarint(32); // field 4, varint
        writer.WriteVarint(value.Int64);
        writer.WriteVarint(40); // field 5, varint
        writer.WriteVarint(value.Uint32);
        writer.WriteVarint(48); // field 6, varint
        writer.WriteVarint(value.Uint64);
        writer.WriteVarint(56); // field 7, varint
        writer.WriteVarintSigned(value.Sint32);
        writer.WriteVarint(64); // field 8, varint
        writer.WriteVarintSigned(value.Sint64);
        writer.WriteVarint(77); // field 9, fixed32
        writer.WriteFixed32(value.Fixed32);
        writer.WriteVarint(81); // field 10, fixed64
        writer.WriteFixed64(value.Fixed64);
        writer.WriteVarint(93); // field 11, fixed32
        writer.WriteFixed32(value.Sfixed32);
        writer.WriteVarint(97); // field 12, fixed64
        writer.WriteFixed64(value.Sfixed64);
        writer.WriteVarint(104); // field 13, varint
        writer.WriteVarint(value.Bool);
        if (value.String is { Length: > 0 } obj14)
        {
            writer.WriteVarint(114); // field 14, string
            writer.WriteWithLengthPrefix(obj14);
        }
    }

    [global::System.Runtime.CompilerServices.CompilerGenerated]
    [global::System.Diagnostics.DebuggerNonUserCode]
    [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
    internal static ulong Measure(PrimitiveFieldTypes value)
    {
        ulong len = 0;
        len += global::ProtoBuf.Nano.Writer.MeasureVarint(value.Int32);
        len += global::ProtoBuf.Nano.Writer.MeasureVarint(value.Int64);
        len += global::ProtoBuf.Nano.Writer.MeasureVarint(value.Uint32);
        len += global::ProtoBuf.Nano.Writer.MeasureVarint(value.Uint64);
        len += global::ProtoBuf.Nano.Writer.MeasureVarintSigned(value.Sint32);
        len += global::ProtoBuf.Nano.Writer.MeasureVarintSigned(value.Sint64);
        if (value.String is { Length: > 0 } obj14)
        {
            len += 1 + global::ProtoBuf.Nano.Writer.MeasureWithLengthPrefix(obj14);
        }
        return len + 50;
    }

    [global::System.Runtime.CompilerServices.CompilerGenerated]
    [global::System.Diagnostics.DebuggerNonUserCode]
    [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
    internal static PrimitiveFieldTypes Merge(PrimitiveFieldTypes value, ref global::ProtoBuf.Nano.Reader reader)
    {
        if (value is null) value = new();
        uint tag;
        while ((tag = reader.ReadTag()) != 0)
        {
            switch (tag)
            {
                case 9: // field 1, fixed64
                    value.Double = reader.ReadFixed64Double();
                    break;
                case 13: // field 1, fixed32
                    value.Double = reader.ReadFixed64Double();
                    break;
                case 21: // field 2, fixed32
                    value.Float = reader.ReadFixed32Single();
                    break;
                case 17: // field 2, fixed64
                    value.Float = reader.ReadFixed64Single();
                    break;
                case 24: // field 3, varint
                    value.Int32 = reader.ReadVarintInt32();
                    break;
                case 29: // field 3, fixed32
                    value.Int32 = reader.ReadFixed32Int32();
                    break;
                case 25: // field 3, fixed64
                    value.Int32 = reader.ReadFixed64Int32();
                    break;
                case 32: // field 4, varint
                    value.Int64 = reader.ReadVarintInt64();
                    break;
                case 37: // field 4, fixed32
                    value.Int64 = reader.ReadFixed32Int64();
                    break;
                case 33: // field 4, fixed64
                    value.Int64 = reader.ReadFixed64Int64();
                    break;
                case 40: // field 5, varint
                    value.Uint32 = reader.ReadVarintUInt32();
                    break;
                case 45: // field 5, fixed32
                    value.Uint32 = reader.ReadFixed32UInt32();
                    break;
                case 41: // field 5, fixed64
                    value.Uint32 = reader.ReadFixed64UInt32();
                    break;
                case 48: // field 6, varint
                    value.Uint64 = reader.ReadVarintUInt64();
                    break;
                case 53: // field 6, fixed32
                    value.Uint64 = reader.ReadFixed32UInt64();
                    break;
                case 49: // field 6, fixed64
                    value.Uint64 = reader.ReadFixed64UInt64();
                    break;
                case 56: // field 7, varint
                    value.Sint32 = reader.ReadVarintInt32Signed();
                    break;
                case 64: // field 8, varint
                    value.Sint64 = reader.ReadVarintInt64Signed();
                    break;
                case 77: // field 9, fixed32
                    value.Fixed32 = reader.ReadFixed32UInt32();
                    break;
                case 73: // field 9, fixed64
                    value.Fixed32 = reader.ReadFixed64UInt32();
                    break;
                case 81: // field 10, fixed64
                    value.Fixed64 = reader.ReadFixed64UInt64();
                    break;
                case 85: // field 10, fixed32
                    value.Fixed64 = reader.ReadFixed32UInt64();
                    break;
                case 93: // field 11, fixed32
                    value.Sfixed32 = reader.ReadFixed32Int32();
                    break;
                case 89: // field 11, fixed64
                    value.Sfixed32 = reader.ReadFixed64Int32();
                    break;
                case 97: // field 12, fixed64
                    value.Sfixed64 = reader.ReadFixed64Int64();
                    break;
                case 101: // field 12, fixed32
                    value.Sfixed64 = reader.ReadFixed32Int64();
                    break;
                case 104: // field 13, varint
                    value.Bool = reader.ReadVarintBoolean();
                    break;
                case 109: // field 13, fixed32
                    value.Bool = reader.ReadFixed32Boolean();
                    break;
                case 105: // field 13, fixed64
                    value.Bool = reader.ReadFixed64Boolean();
                    break;
                case 114: // field 14, string
                    value.String = reader.ReadString();
                    break;
                default:
                    if ((tag & 7) == 4) // end-group
                    {
                        reader.PushGroup(tag);
                        goto ExitLoop;
                    }
                    switch (tag >> 3)
                    {
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                            reader.ThrowUnhandledWireType(tag);
                            break;
                    }
                    reader.Skip(tag);
                    break;
            }
        }
    ExitLoop:
        return value;
    }

}

partial class RepeatedPrimitiveFieldTypes
{
    [global::System.Runtime.CompilerServices.CompilerGenerated]
    [global::System.Diagnostics.DebuggerNonUserCode]
    [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
    internal static void Write(RepeatedPrimitiveFieldTypes value, ref global::ProtoBuf.Nano.Writer writer)
    {
    #if NET5_0_OR_GREATER
        foreach (var __pbn_item in System.Runtime.InteropServices.CollectionsMarshal.AsSpan(value.Doubles))
    #else
        foreach (var __pbn_item in value.Doubles)
    #endif
        {
            writer.WriteVarint(9); // field 1, fixed64
            writer.WriteFixed64(__pbn_item);
        }
    #if NET5_0_OR_GREATER
        foreach (var __pbn_item in System.Runtime.InteropServices.CollectionsMarshal.AsSpan(value.Floats))
    #else
        foreach (var __pbn_item in value.Floats)
    #endif
        {
            writer.WriteVarint(21); // field 2, fixed32
            writer.WriteFixed32(__pbn_item);
        }
    #if NET5_0_OR_GREATER
        foreach (var __pbn_item in System.Runtime.InteropServices.CollectionsMarshal.AsSpan(value.Int32s))
    #else
        foreach (var __pbn_item in value.Int32s)
    #endif
        {
            writer.WriteVarint(24); // field 3, varint
            writer.WriteVarint(__pbn_item);
        }
    #if NET5_0_OR_GREATER
        foreach (var __pbn_item in System.Runtime.InteropServices.CollectionsMarshal.AsSpan(value.Int64s))
    #else
        foreach (var __pbn_item in value.Int64s)
    #endif
        {
            writer.WriteVarint(32); // field 4, varint
            writer.WriteVarint(__pbn_item);
        }
    #if NET5_0_OR_GREATER
        foreach (var __pbn_item in System.Runtime.InteropServices.CollectionsMarshal.AsSpan(value.Uint32s))
    #else
        foreach (var __pbn_item in value.Uint32s)
    #endif
        {
            writer.WriteVarint(40); // field 5, varint
            writer.WriteVarint(__pbn_item);
        }
    #if NET5_0_OR_GREATER
        foreach (var __pbn_item in System.Runtime.InteropServices.CollectionsMarshal.AsSpan(value.Uint64s))
    #else
        foreach (var __pbn_item in value.Uint64s)
    #endif
        {
            writer.WriteVarint(48); // field 6, varint
            writer.WriteVarint(__pbn_item);
        }
    #if NET5_0_OR_GREATER
        foreach (var __pbn_item in System.Runtime.InteropServices.CollectionsMarshal.AsSpan(value.Sint32s))
    #else
        foreach (var __pbn_item in value.Sint32s)
    #endif
        {
            writer.WriteVarint(56); // field 7, varint
            writer.WriteVarintSigned(__pbn_item);
        }
    #if NET5_0_OR_GREATER
        foreach (var __pbn_item in System.Runtime.InteropServices.CollectionsMarshal.AsSpan(value.Sint64s))
    #else
        foreach (var __pbn_item in value.Sint64s)
    #endif
        {
            writer.WriteVarint(64); // field 8, varint
            writer.WriteVarintSigned(__pbn_item);
        }
    #if NET5_0_OR_GREATER
        foreach (var __pbn_item in System.Runtime.InteropServices.CollectionsMarshal.AsSpan(value.Fixed32s))
    #else
        foreach (var __pbn_item in value.Fixed32s)
    #endif
        {
            writer.WriteVarint(77); // field 9, fixed32
            writer.WriteFixed32(__pbn_item);
        }
    #if NET5_0_OR_GREATER
        foreach (var __pbn_item in System.Runtime.InteropServices.CollectionsMarshal.AsSpan(value.Fixed64s))
    #else
        foreach (var __pbn_item in value.Fixed64s)
    #endif
        {
            writer.WriteVarint(81); // field 10, fixed64
            writer.WriteFixed64(__pbn_item);
        }
    #if NET5_0_OR_GREATER
        foreach (var __pbn_item in System.Runtime.InteropServices.CollectionsMarshal.AsSpan(value.Sfixed32s))
    #else
        foreach (var __pbn_item in value.Sfixed32s)
    #endif
        {
            writer.WriteVarint(93); // field 11, fixed32
            writer.WriteFixed32(__pbn_item);
        }
    #if NET5_0_OR_GREATER
        foreach (var __pbn_item in System.Runtime.InteropServices.CollectionsMarshal.AsSpan(value.Sfixed64s))
    #else
        foreach (var __pbn_item in value.Sfixed64s)
    #endif
        {
            writer.WriteVarint(97); // field 12, fixed64
            writer.WriteFixed64(__pbn_item);
        }
    #if NET5_0_OR_GREATER
        foreach (var __pbn_item in System.Runtime.InteropServices.CollectionsMarshal.AsSpan(value.Bools))
    #else
        foreach (var __pbn_item in value.Bools)
    #endif
        {
            writer.WriteVarint(104); // field 13, varint
            writer.WriteVarint(__pbn_item);
        }
    #if NET5_0_OR_GREATER
        foreach (var __pbn_item in System.Runtime.InteropServices.CollectionsMarshal.AsSpan(value.Strings))
    #else
        foreach (var __pbn_item in value.Strings)
    #endif
        {
            writer.WriteVarint(114); // field 14, string
            writer.WriteWithLengthPrefix(__pbn_item);
        }
    #if NET5_0_OR_GREATER
        foreach (var __pbn_item in System.Runtime.InteropServices.CollectionsMarshal.AsSpan(value.Bytes))
    #else
        foreach (var __pbn_item in value.Bytes)
    #endif
        {
            writer.WriteVarint(122); // field 15, string
            writer.WriteWithLengthPrefix(__pbn_item);
        }
    }

    [global::System.Runtime.CompilerServices.CompilerGenerated]
    [global::System.Diagnostics.DebuggerNonUserCode]
    [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
    internal static ulong Measure(RepeatedPrimitiveFieldTypes value)
    {
        ulong len = 0;
    #if NET5_0_OR_GREATER
        foreach (var __pbn_item in System.Runtime.InteropServices.CollectionsMarshal.AsSpan(value.Doubles))
    #else
        foreach (var __pbn_item in value.Doubles)
    #endif
        {
            len += 9;
        }
    #if NET5_0_OR_GREATER
        foreach (var __pbn_item in System.Runtime.InteropServices.CollectionsMarshal.AsSpan(value.Floats))
    #else
        foreach (var __pbn_item in value.Floats)
    #endif
        {
            len += 5;
        }
    #if NET5_0_OR_GREATER
        foreach (var __pbn_item in System.Runtime.InteropServices.CollectionsMarshal.AsSpan(value.Int32s))
    #else
        foreach (var __pbn_item in value.Int32s)
    #endif
        {
            len += global::ProtoBuf.Nano.Writer.MeasureVarint(__pbn_item) + 1;
        }
    #if NET5_0_OR_GREATER
        foreach (var __pbn_item in System.Runtime.InteropServices.CollectionsMarshal.AsSpan(value.Int64s))
    #else
        foreach (var __pbn_item in value.Int64s)
    #endif
        {
            len += global::ProtoBuf.Nano.Writer.MeasureVarint(__pbn_item) + 1;
        }
    #if NET5_0_OR_GREATER
        foreach (var __pbn_item in System.Runtime.InteropServices.CollectionsMarshal.AsSpan(value.Uint32s))
    #else
        foreach (var __pbn_item in value.Uint32s)
    #endif
        {
            len += global::ProtoBuf.Nano.Writer.MeasureVarint(__pbn_item) + 1;
        }
    #if NET5_0_OR_GREATER
        foreach (var __pbn_item in System.Runtime.InteropServices.CollectionsMarshal.AsSpan(value.Uint64s))
    #else
        foreach (var __pbn_item in value.Uint64s)
    #endif
        {
            len += global::ProtoBuf.Nano.Writer.MeasureVarint(__pbn_item) + 1;
        }
    #if NET5_0_OR_GREATER
        foreach (var __pbn_item in System.Runtime.InteropServices.CollectionsMarshal.AsSpan(value.Sint32s))
    #else
        foreach (var __pbn_item in value.Sint32s)
    #endif
        {
            len += global::ProtoBuf.Nano.Writer.MeasureVarintSigned(__pbn_item) + 1;
        }
    #if NET5_0_OR_GREATER
        foreach (var __pbn_item in System.Runtime.InteropServices.CollectionsMarshal.AsSpan(value.Sint64s))
    #else
        foreach (var __pbn_item in value.Sint64s)
    #endif
        {
            len += global::ProtoBuf.Nano.Writer.MeasureVarintSigned(__pbn_item) + 1;
        }
    #if NET5_0_OR_GREATER
        foreach (var __pbn_item in System.Runtime.InteropServices.CollectionsMarshal.AsSpan(value.Fixed32s))
    #else
        foreach (var __pbn_item in value.Fixed32s)
    #endif
        {
            len += 5;
        }
    #if NET5_0_OR_GREATER
        foreach (var __pbn_item in System.Runtime.InteropServices.CollectionsMarshal.AsSpan(value.Fixed64s))
    #else
        foreach (var __pbn_item in value.Fixed64s)
    #endif
        {
            len += 9;
        }
    #if NET5_0_OR_GREATER
        foreach (var __pbn_item in System.Runtime.InteropServices.CollectionsMarshal.AsSpan(value.Sfixed32s))
    #else
        foreach (var __pbn_item in value.Sfixed32s)
    #endif
        {
            len += 5;
        }
    #if NET5_0_OR_GREATER
        foreach (var __pbn_item in System.Runtime.InteropServices.CollectionsMarshal.AsSpan(value.Sfixed64s))
    #else
        foreach (var __pbn_item in value.Sfixed64s)
    #endif
        {
            len += 9;
        }
    #if NET5_0_OR_GREATER
        foreach (var __pbn_item in System.Runtime.InteropServices.CollectionsMarshal.AsSpan(value.Bools))
    #else
        foreach (var __pbn_item in value.Bools)
    #endif
        {
            len += 2;
        }
    #if NET5_0_OR_GREATER
        foreach (var __pbn_item in System.Runtime.InteropServices.CollectionsMarshal.AsSpan(value.Strings))
    #else
        foreach (var __pbn_item in value.Strings)
    #endif
        {
            len += 1 + global::ProtoBuf.Nano.Writer.MeasureWithLengthPrefix(__pbn_item);
            len += 0;
        }
    #if NET5_0_OR_GREATER
        foreach (var __pbn_item in System.Runtime.InteropServices.CollectionsMarshal.AsSpan(value.Bytes))
    #else
        foreach (var __pbn_item in value.Bytes)
    #endif
        {
            len += 1 + global::ProtoBuf.Nano.Writer.MeasureWithLengthPrefix(__pbn_item);
            len += 0;
        }
        return len;
    }

    [global::System.Runtime.CompilerServices.CompilerGenerated]
    [global::System.Diagnostics.DebuggerNonUserCode]
    [global::System.CodeDom.Compiler.GeneratedCode("protogen", "test")]
    internal static RepeatedPrimitiveFieldTypes Merge(RepeatedPrimitiveFieldTypes value, ref global::ProtoBuf.Nano.Reader reader)
    {
        ulong packed;
        if (value is null) value = new();
        uint tag;
        while ((tag = reader.ReadTag()) != 0)
        {
            switch (tag)
            {
                case 9: // field 1, fixed64
                    do
                    {
                        value.Doubles.Add(reader.ReadFixed64Double());
                    }
                    while (reader.TryReadTag(9));
                    break;
                case 10: // field 1, string (packed)
                    packed = reader.ReadVarintUInt64();
                    if ((packed & 7) != 0) reader.ThrowInvalidPackedLength(tag, packed);
                    packed >>= 3;
                    while (packed-- != 0)
                    {
                        value.Doubles.Add(reader.ReadFixed64Double());
                    }
                    break;
                case 13: // field 1, fixed32
                    do
                    {
                        value.Doubles.Add(reader.ReadFixed64Double());
                    }
                    while (reader.TryReadTag(13));
                    break;
                case 21: // field 2, fixed32
                    do
                    {
                        value.Floats.Add(reader.ReadFixed32Single());
                    }
                    while (reader.TryReadTag(21));
                    break;
                case 18: // field 2, string (packed)
                    packed = reader.ReadVarintUInt64();
                    if ((packed & 3) != 0) reader.ThrowInvalidPackedLength(tag, packed);
                    packed >>= 2;
                    while (packed-- != 0)
                    {
                        value.Floats.Add(reader.ReadFixed32Single());
                    }
                    break;
                case 17: // field 2, fixed64
                    do
                    {
                        value.Floats.Add(reader.ReadFixed64Single());
                    }
                    while (reader.TryReadTag(17));
                    break;
                case 24: // field 3, varint
                    do
                    {
                        value.Int32s.Add(reader.ReadVarintInt32());
                    }
                    while (reader.TryReadTag(24));
                    break;
                case 26: // field 3, string (packed)
                    packed = reader.ReadVarintUInt64() + reader.Position;
                    while (reader.Position < packed)
                    {
                        value.Int32s.Add(reader.ReadVarintInt32());
                    }
                    break;
                case 29: // field 3, fixed32
                    do
                    {
                        value.Int32s.Add(reader.ReadFixed32Int32());
                    }
                    while (reader.TryReadTag(29));
                    break;
                case 25: // field 3, fixed64
                    do
                    {
                        value.Int32s.Add(reader.ReadFixed64Int32());
                    }
                    while (reader.TryReadTag(25));
                    break;
                case 32: // field 4, varint
                    do
                    {
                        value.Int64s.Add(reader.ReadVarintInt64());
                    }
                    while (reader.TryReadTag(32));
                    break;
                case 34: // field 4, string (packed)
                    packed = reader.ReadVarintUInt64() + reader.Position;
                    while (reader.Position < packed)
                    {
                        value.Int64s.Add(reader.ReadVarintInt64());
                    }
                    break;
                case 37: // field 4, fixed32
                    do
                    {
                        value.Int64s.Add(reader.ReadFixed32Int64());
                    }
                    while (reader.TryReadTag(37));
                    break;
                case 33: // field 4, fixed64
                    do
                    {
                        value.Int64s.Add(reader.ReadFixed64Int64());
                    }
                    while (reader.TryReadTag(33));
                    break;
                case 40: // field 5, varint
                    do
                    {
                        value.Uint32s.Add(reader.ReadVarintUInt32());
                    }
                    while (reader.TryReadTag(40));
                    break;
                case 42: // field 5, string (packed)
                    packed = reader.ReadVarintUInt64() + reader.Position;
                    while (reader.Position < packed)
                    {
                        value.Uint32s.Add(reader.ReadVarintUInt32());
                    }
                    break;
                case 45: // field 5, fixed32
                    do
                    {
                        value.Uint32s.Add(reader.ReadFixed32UInt32());
                    }
                    while (reader.TryReadTag(45));
                    break;
                case 41: // field 5, fixed64
                    do
                    {
                        value.Uint32s.Add(reader.ReadFixed64UInt32());
                    }
                    while (reader.TryReadTag(41));
                    break;
                case 48: // field 6, varint
                    do
                    {
                        value.Uint64s.Add(reader.ReadVarintUInt64());
                    }
                    while (reader.TryReadTag(48));
                    break;
                case 50: // field 6, string (packed)
                    packed = reader.ReadVarintUInt64() + reader.Position;
                    while (reader.Position < packed)
                    {
                        value.Uint64s.Add(reader.ReadVarintUInt64());
                    }
                    break;
                case 53: // field 6, fixed32
                    do
                    {
                        value.Uint64s.Add(reader.ReadFixed32UInt64());
                    }
                    while (reader.TryReadTag(53));
                    break;
                case 49: // field 6, fixed64
                    do
                    {
                        value.Uint64s.Add(reader.ReadFixed64UInt64());
                    }
                    while (reader.TryReadTag(49));
                    break;
                case 56: // field 7, varint
                    do
                    {
                        value.Sint32s.Add(reader.ReadVarintInt32Signed());
                    }
                    while (reader.TryReadTag(56));
                    break;
                case 58: // field 7, string (packed)
                    packed = reader.ReadVarintUInt64() + reader.Position;
                    while (reader.Position < packed)
                    {
                        value.Sint32s.Add(reader.ReadVarintInt32Signed());
                    }
                    break;
                case 64: // field 8, varint
                    do
                    {
                        value.Sint64s.Add(reader.ReadVarintInt64Signed());
                    }
                    while (reader.TryReadTag(64));
                    break;
                case 66: // field 8, string (packed)
                    packed = reader.ReadVarintUInt64() + reader.Position;
                    while (reader.Position < packed)
                    {
                        value.Sint64s.Add(reader.ReadVarintInt64Signed());
                    }
                    break;
                case 77: // field 9, fixed32
                    do
                    {
                        value.Fixed32s.Add(reader.ReadFixed32UInt32());
                    }
                    while (reader.TryReadTag(77));
                    break;
                case 74: // field 9, string (packed)
                    packed = reader.ReadVarintUInt64();
                    if ((packed & 3) != 0) reader.ThrowInvalidPackedLength(tag, packed);
                    packed >>= 2;
                    while (packed-- != 0)
                    {
                        value.Fixed32s.Add(reader.ReadFixed32UInt32());
                    }
                    break;
                case 73: // field 9, fixed64
                    do
                    {
                        value.Fixed32s.Add(reader.ReadFixed64UInt32());
                    }
                    while (reader.TryReadTag(73));
                    break;
                case 81: // field 10, fixed64
                    do
                    {
                        value.Fixed64s.Add(reader.ReadFixed64UInt64());
                    }
                    while (reader.TryReadTag(81));
                    break;
                case 82: // field 10, string (packed)
                    packed = reader.ReadVarintUInt64();
                    if ((packed & 7) != 0) reader.ThrowInvalidPackedLength(tag, packed);
                    packed >>= 3;
                    while (packed-- != 0)
                    {
                        value.Fixed64s.Add(reader.ReadFixed64UInt64());
                    }
                    break;
                case 85: // field 10, fixed32
                    do
                    {
                        value.Fixed64s.Add(reader.ReadFixed32UInt64());
                    }
                    while (reader.TryReadTag(85));
                    break;
                case 93: // field 11, fixed32
                    do
                    {
                        value.Sfixed32s.Add(reader.ReadFixed32Int32());
                    }
                    while (reader.TryReadTag(93));
                    break;
                case 90: // field 11, string (packed)
                    packed = reader.ReadVarintUInt64();
                    if ((packed & 3) != 0) reader.ThrowInvalidPackedLength(tag, packed);
                    packed >>= 2;
                    while (packed-- != 0)
                    {
                        value.Sfixed32s.Add(reader.ReadFixed32Int32());
                    }
                    break;
                case 89: // field 11, fixed64
                    do
                    {
                        value.Sfixed32s.Add(reader.ReadFixed64Int32());
                    }
                    while (reader.TryReadTag(89));
                    break;
                case 97: // field 12, fixed64
                    do
                    {
                        value.Sfixed64s.Add(reader.ReadFixed64Int64());
                    }
                    while (reader.TryReadTag(97));
                    break;
                case 98: // field 12, string (packed)
                    packed = reader.ReadVarintUInt64();
                    if ((packed & 7) != 0) reader.ThrowInvalidPackedLength(tag, packed);
                    packed >>= 3;
                    while (packed-- != 0)
                    {
                        value.Sfixed64s.Add(reader.ReadFixed64Int64());
                    }
                    break;
                case 101: // field 12, fixed32
                    do
                    {
                        value.Sfixed64s.Add(reader.ReadFixed32Int64());
                    }
                    while (reader.TryReadTag(101));
                    break;
                case 104: // field 13, varint
                    do
                    {
                        value.Bools.Add(reader.ReadVarintBoolean());
                    }
                    while (reader.TryReadTag(104));
                    break;
                case 106: // field 13, string (packed)
                    packed = reader.ReadVarintUInt64() + reader.Position;
                    while (reader.Position < packed)
                    {
                        value.Bools.Add(reader.ReadVarintBoolean());
                    }
                    break;
                case 109: // field 13, fixed32
                    do
                    {
                        value.Bools.Add(reader.ReadFixed32Boolean());
                    }
                    while (reader.TryReadTag(109));
                    break;
                case 105: // field 13, fixed64
                    do
                    {
                        value.Bools.Add(reader.ReadFixed64Boolean());
                    }
                    while (reader.TryReadTag(105));
                    break;
                case 114: // field 14, string
                    do
                    {
                        value.Strings.Add(reader.ReadString());
                    }
                    while (reader.TryReadTag(114));
                    break;
                case 122: // field 15, string
                    do
                    {
                        value.Bytes.Add(reader.ReadBytes());
                    }
                    while (reader.TryReadTag(122));
                    break;
                default:
                    if ((tag & 7) == 4) // end-group
                    {
                        reader.PushGroup(tag);
                        goto ExitLoop;
                    }
                    switch (tag >> 3)
                    {
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                            reader.ThrowUnhandledWireType(tag);
                            break;
                    }
                    reader.Skip(tag);
                    break;
            }
        }
    ExitLoop:
        return value;
    }

}

partial interface IIISearchService
{
}

#pragma warning restore CS0612, CS0618, CS1591, CS3021, IDE0079, IDE1006, RCS1036, RCS1057, RCS1085, RCS1192
#endregion

<Project>
    <!-- workaround for deterministic builds; see https://github.com/clairernovotny/DeterministicBuilds -->
    <PropertyGroup>
        <TargetFrameworkMonikerAssemblyAttributesPath>$([System.IO.Path]::Combine('$(IntermediateOutputPath)','$(TargetFrameworkMoniker).AssemblyAttributes$(DefaultLanguageSourceExtension)'))</TargetFrameworkMonikerAssemblyAttributesPath>
    </PropertyGroup>
    <ItemGroup>
        <EmbeddedFiles Include="$(GeneratedAssemblyInfoFile)"/>
    </ItemGroup>
    <ItemGroup Condition=" '$(EnableCentralPackageVersions)' != 'false' ">
        <!--
      Workaround the issue where FSharp SDK adds implicit PackageReference items but doesn't mark them as such
      https://github.com/microsoft/MSBuildSdks/issues/90
    -->
        <PackageReference Update="FSharp.Core"
                          Condition="'$(MSBuildProjectExtension)' == '.fsproj' And '$(DisableImplicitFSharpCoreReference)' != 'true' And '$(UpdateImplicitFSharpCoreReference)' != 'false'"
                          IsImplicitlyDefined="true" />

        <PackageReference Update="System.ValueTuple"
                          Condition="'$(MSBuildProjectExtension)' == '.fsproj' And '$(DisableImplicitSystemValueTupleReference)' != 'true' And '$(UpdateImplicitSystemValueTupleReference)' != 'false' And '$(TargetFrameworkIdentifier)' == '.NETFramework' And '$(_TargetFrameworkVersionWithoutV)' &gt;= '4.0' And '$(_TargetFrameworkVersionWithoutV)' &lt;= '4.7'"
                          IsImplicitlyDefined="true" />
    </ItemGroup>
</Project>